nohup: ignoring input
2025-06-17 20:10:55,133 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-17T20:10:55.094479', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-ivfpq-openai-5m', token=None), db_case_config=LanceDBIndexConfig(index=<IndexType.IVFPQ: 'IVF_PQ'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=8944, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=11), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[1], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (2843327)
2025-06-17 20:10:55,133 | [92mINFO[0m: [92mgenerated uuid for the tasks: f7499d9992824e5ea8b9a1de51171b67[0m (interface.py:72) (2843327)
2025-06-17 20:10:55,275 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-17 20:10:55,276 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-17 20:10:55,276 | INFO | LanceDB-2025-06-17T20:10:55.094479 | Performance  OpenAI-LARGE-5M         None | f7499d9992824e5ea8b9a1de51171b67 (task_runner.py:340)
2025-06-17 20:10:55,276 | [92mINFO[0m: [92mtask submitted: id=f7499d9992824e5ea8b9a1de51171b67, f7499d9992824e5ea8b9a1de51171b67, case number: 1[0m (interface.py:242) (2843327)
2025-06-17 20:10:55,959 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-17T20:10:55.094479'}, drop_old=False[0m (interface.py:172) (2843376)
2025-06-17 20:10:55,959 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (2843376)
2025-06-17 20:10:56,100 | [92mINFO[0m: [92mSearch config: {'nprobes': 11}[0m (lancedb.py:38) (2843376)
2025-06-17 20:10:58,839 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (2843376)
2025-06-17 20:10:58,932 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (2843376)
2025-06-17 20:10:59,000 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (2843376)
2025-06-17 20:10:59,770 | [92mINFO[0m: [92mStart search 30s in concurrency 1, filters: None[0m (mp_runner.py:118) (2843376)
2025-06-17 20:11:00,831 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=1[0m (mp_runner.py:125) (2843376)
2025-06-17 20:11:30,942 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.1047s, count=57, qps in this process: 1.8934[0m (mp_runner.py:91) (2843534)
2025-06-17 20:11:30,943 | [92mINFO[0m: [92mEnd search in concurrency 1: dur=30.111370488011744s, total_count=57, qps=1.893[0m (mp_runner.py:139) (2843376)
2025-06-17 20:11:31,286 | [92mINFO[0m: [92mUpdate largest qps with concurrency 1: current max_qps=1.893[0m (mp_runner.py:143) (2843376)
2025-06-17 20:11:32,195 | [92mINFO[0m: [92mSpawnProcess-1:3 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (2843864)
2025-06-17 20:19:31,655 | [92mINFO[0m: [92mSpawnProcess-1:3 search entire test_data: cost=476.31s, queries=1000, avg_recall=0.6364, avg_ndcg=0.4011,avg_latency=0.4763, p99=0.5839[0m (serial_runner.py:251) (2843864)
2025-06-17 20:19:31,956 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=1.893, serial_latency_p99=np.float64(0.5839), recall=np.float64(0.6364), ndcg=np.float64(0.4011), conc_num_list=[1], conc_qps_list=[1.893], conc_latency_p99_list=[np.float64(0.6756925080390643)], conc_latency_avg_list=[np.float64(0.5271227380849028)])[0m (task_runner.py:186) (2843376)
2025-06-17 20:19:31,957 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-17T20:10:55.094479'}, result=Metric(max_load_count=0, load_duration=0.0, qps=1.893, serial_latency_p99=np.float64(0.5839), recall=np.float64(0.6364), ndcg=np.float64(0.4011), conc_num_list=[1], conc_qps_list=[1.893], conc_latency_p99_list=[np.float64(0.6756925080390643)], conc_latency_avg_list=[np.float64(0.5271227380849028)]), label=ResultLabel.NORMAL[0m (interface.py:174) (2843376)
2025-06-17 20:19:31,957 | INFO |Task summary: run_id=f7499, task_label=f7499d9992824e5ea8b9a1de51171b67 (models.py:375)
2025-06-17 20:19:31,957 | INFO |DB      | db_label                      case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-17 20:19:31,957 | INFO |------- | ----------------------------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-17 20:19:31,957 | INFO |LanceDB | 2025-06-17T20:10:55.094479    Performance1536D5M f7499d9992824e5ea8b9a1de51171b67 | 0.0         1.893      0.5839          0.6364        0              | :)    (models.py:375)
2025-06-17 20:19:31,957 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250617_f7499d9992824e5ea8b9a1de51171b67_lancedb.json[0m (models.py:243) (2843376)
2025-06-17 20:19:31,958 | [92mINFO[0m: [92mSuccess to finish task: label=f7499d9992824e5ea8b9a1de51171b67, run_id=f7499d9992824e5ea8b9a1de51171b67[0m (interface.py:213) (2843376)

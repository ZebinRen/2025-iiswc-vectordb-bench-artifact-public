2025-06-14 04:15:55,596 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T04:15:55.557388', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-5m', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=44), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[1], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (548803)
2025-06-14 04:15:55,596 | [92mINFO[0m: [92mgenerated uuid for the tasks: a5b26dcfcaf94715b8a093031f36c2b6[0m (interface.py:72) (548803)
2025-06-14 04:15:55,742 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 04:15:55,742 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 04:15:55,742 | INFO | LanceDB-2025-06-14T04:15:55.557388 | Performance  OpenAI-LARGE-5M         None | a5b26dcfcaf94715b8a093031f36c2b6 (task_runner.py:340)
2025-06-14 04:15:55,742 | [92mINFO[0m: [92mtask submitted: id=a5b26dcfcaf94715b8a093031f36c2b6, a5b26dcfcaf94715b8a093031f36c2b6, case number: 1[0m (interface.py:242) (548803)
2025-06-14 04:15:56,501 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:15:55.557388'}, drop_old=False[0m (interface.py:172) (548827)
2025-06-14 04:15:56,501 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (548827)
2025-06-14 04:15:56,646 | [92mINFO[0m: [92mSearch config: {'ef': 44}[0m (lancedb.py:38) (548827)
2025-06-14 04:15:59,361 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (548827)
2025-06-14 04:15:59,463 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (548827)
2025-06-14 04:15:59,534 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (548827)
2025-06-14 04:16:00,376 | [92mINFO[0m: [92mStart search 30s in concurrency 1, filters: None[0m (mp_runner.py:118) (548827)
2025-06-14 04:16:01,445 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=1[0m (mp_runner.py:125) (548827)
2025-06-14 04:16:36,931 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=35.4738s, count=635, qps in this process: 17.9005[0m (mp_runner.py:91) (548955)
2025-06-14 04:16:36,934 | [92mINFO[0m: [92mEnd search in concurrency 1: dur=35.487719375996676s, total_count=635, qps=17.8935[0m (mp_runner.py:139) (548827)
2025-06-14 04:16:37,743 | [92mINFO[0m: [92mUpdate largest qps with concurrency 1: current max_qps=17.8935[0m (mp_runner.py:143) (548827)
2025-06-14 04:16:38,697 | [92mINFO[0m: [92mSpawnProcess-1:3 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (549160)
2025-06-14 04:17:28,815 | [92mINFO[0m: [92mSpawnProcess-1:3 search entire test_data: cost=38.9456s, queries=1000, avg_recall=0.9107, avg_ndcg=0.9254,avg_latency=0.0389, p99=0.0256[0m (serial_runner.py:251) (549160)
2025-06-14 04:17:29,378 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=17.8935, serial_latency_p99=np.float64(0.0256), recall=np.float64(0.9107), ndcg=np.float64(0.9254), conc_num_list=[1], conc_qps_list=[17.8935], conc_latency_p99_list=[np.float64(0.024806106476607966)], conc_latency_avg_list=[np.float64(0.047251663247089445)])[0m (task_runner.py:186) (548827)
2025-06-14 04:17:29,378 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:15:55.557388'}, result=Metric(max_load_count=0, load_duration=0.0, qps=17.8935, serial_latency_p99=np.float64(0.0256), recall=np.float64(0.9107), ndcg=np.float64(0.9254), conc_num_list=[1], conc_qps_list=[17.8935], conc_latency_p99_list=[np.float64(0.024806106476607966)], conc_latency_avg_list=[np.float64(0.047251663247089445)]), label=ResultLabel.NORMAL[0m (interface.py:174) (548827)
2025-06-14 04:17:29,379 | INFO |Task summary: run_id=a5b26, task_label=a5b26dcfcaf94715b8a093031f36c2b6 (models.py:375)
2025-06-14 04:17:29,379 | INFO |DB      | db_label                      case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 04:17:29,379 | INFO |------- | ----------------------------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 04:17:29,380 | INFO |LanceDB | 2025-06-14T04:15:55.557388    Performance1536D5M a5b26dcfcaf94715b8a093031f36c2b6 | 0.0         17.8935    0.0256          0.9107        0              | :)    (models.py:375)
2025-06-14 04:17:29,380 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_a5b26dcfcaf94715b8a093031f36c2b6_lancedb.json[0m (models.py:243) (548827)
2025-06-14 04:17:29,381 | [92mINFO[0m: [92mSuccess to finish task: label=a5b26dcfcaf94715b8a093031f36c2b6, run_id=a5b26dcfcaf94715b8a093031f36c2b6[0m (interface.py:213) (548827)

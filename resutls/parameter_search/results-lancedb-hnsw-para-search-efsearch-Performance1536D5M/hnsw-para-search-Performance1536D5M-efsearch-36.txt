2025-06-14 04:20:37,164 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T04:20:37.125102', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-5m', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=36), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[1], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (550202)
2025-06-14 04:20:37,164 | [92mINFO[0m: [92mgenerated uuid for the tasks: 2d42a33fa2324dafa1618ed4e764fafe[0m (interface.py:72) (550202)
2025-06-14 04:20:37,316 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 04:20:37,316 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 04:20:37,317 | INFO | LanceDB-2025-06-14T04:20:37.125102 | Performance  OpenAI-LARGE-5M         None | 2d42a33fa2324dafa1618ed4e764fafe (task_runner.py:340)
2025-06-14 04:20:37,317 | [92mINFO[0m: [92mtask submitted: id=2d42a33fa2324dafa1618ed4e764fafe, 2d42a33fa2324dafa1618ed4e764fafe, case number: 1[0m (interface.py:242) (550202)
2025-06-14 04:20:38,052 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:20:37.125102'}, drop_old=False[0m (interface.py:172) (550226)
2025-06-14 04:20:38,052 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (550226)
2025-06-14 04:20:38,194 | [92mINFO[0m: [92mSearch config: {'ef': 36}[0m (lancedb.py:38) (550226)
2025-06-14 04:20:40,935 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (550226)
2025-06-14 04:20:41,037 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (550226)
2025-06-14 04:20:41,104 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (550226)
2025-06-14 04:20:41,917 | [92mINFO[0m: [92mStart search 30s in concurrency 1, filters: None[0m (mp_runner.py:118) (550226)
2025-06-14 04:20:42,983 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=1[0m (mp_runner.py:125) (550226)
2025-06-14 04:21:18,101 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=35.1059s, count=596, qps in this process: 16.9772[0m (mp_runner.py:91) (550500)
2025-06-14 04:21:18,103 | [92mINFO[0m: [92mEnd search in concurrency 1: dur=35.11882578099903s, total_count=596, qps=16.971[0m (mp_runner.py:139) (550226)
2025-06-14 04:21:18,791 | [92mINFO[0m: [92mUpdate largest qps with concurrency 1: current max_qps=16.971[0m (mp_runner.py:143) (550226)
2025-06-14 04:21:19,808 | [92mINFO[0m: [92mSpawnProcess-1:3 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (550720)
2025-06-14 04:22:08,374 | [92mINFO[0m: [92mSpawnProcess-1:3 search entire test_data: cost=37.57s, queries=1000, avg_recall=0.898, avg_ndcg=0.913,avg_latency=0.0376, p99=0.0247[0m (serial_runner.py:251) (550720)
2025-06-14 04:22:08,855 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=16.971, serial_latency_p99=np.float64(0.0247), recall=np.float64(0.898), ndcg=np.float64(0.913), conc_num_list=[1], conc_qps_list=[16.971], conc_latency_p99_list=[np.float64(0.024374500555131805)], conc_latency_avg_list=[np.float64(0.0503470602952131)])[0m (task_runner.py:186) (550226)
2025-06-14 04:22:08,856 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:20:37.125102'}, result=Metric(max_load_count=0, load_duration=0.0, qps=16.971, serial_latency_p99=np.float64(0.0247), recall=np.float64(0.898), ndcg=np.float64(0.913), conc_num_list=[1], conc_qps_list=[16.971], conc_latency_p99_list=[np.float64(0.024374500555131805)], conc_latency_avg_list=[np.float64(0.0503470602952131)]), label=ResultLabel.NORMAL[0m (interface.py:174) (550226)
2025-06-14 04:22:08,856 | INFO |Task summary: run_id=2d42a, task_label=2d42a33fa2324dafa1618ed4e764fafe (models.py:375)
2025-06-14 04:22:08,856 | INFO |DB      | db_label                      case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 04:22:08,856 | INFO |------- | ----------------------------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 04:22:08,856 | INFO |LanceDB | 2025-06-14T04:20:37.125102    Performance1536D5M 2d42a33fa2324dafa1618ed4e764fafe | 0.0         16.971     0.0247          0.898         0              | :)    (models.py:375)
2025-06-14 04:22:08,857 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_2d42a33fa2324dafa1618ed4e764fafe_lancedb.json[0m (models.py:243) (550226)
2025-06-14 04:22:08,857 | [92mINFO[0m: [92mSuccess to finish task: label=2d42a33fa2324dafa1618ed4e764fafe, run_id=2d42a33fa2324dafa1618ed4e764fafe[0m (interface.py:213) (550226)

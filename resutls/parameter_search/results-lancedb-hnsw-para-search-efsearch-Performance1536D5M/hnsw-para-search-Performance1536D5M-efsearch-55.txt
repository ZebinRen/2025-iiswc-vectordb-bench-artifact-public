2025-06-14 04:11:06,503 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T04:11:06.465342', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-5m', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=55), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[1], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (547378)
2025-06-14 04:11:06,504 | [92mINFO[0m: [92mgenerated uuid for the tasks: e7d3275365ba4a56a816328f5bdfd8e9[0m (interface.py:72) (547378)
2025-06-14 04:11:06,643 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 04:11:06,643 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 04:11:06,644 | INFO | LanceDB-2025-06-14T04:11:06.465342 | Performance  OpenAI-LARGE-5M         None | e7d3275365ba4a56a816328f5bdfd8e9 (task_runner.py:340)
2025-06-14 04:11:06,644 | [92mINFO[0m: [92mtask submitted: id=e7d3275365ba4a56a816328f5bdfd8e9, e7d3275365ba4a56a816328f5bdfd8e9, case number: 1[0m (interface.py:242) (547378)
2025-06-14 04:11:07,351 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:11:06.465342'}, drop_old=False[0m (interface.py:172) (547402)
2025-06-14 04:11:07,352 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (547402)
2025-06-14 04:11:07,492 | [92mINFO[0m: [92mSearch config: {'ef': 55}[0m (lancedb.py:38) (547402)
2025-06-14 04:11:10,201 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (547402)
2025-06-14 04:11:10,304 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (547402)
2025-06-14 04:11:10,370 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (547402)
2025-06-14 04:11:11,211 | [92mINFO[0m: [92mStart search 30s in concurrency 1, filters: None[0m (mp_runner.py:118) (547402)
2025-06-14 04:11:12,280 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=1[0m (mp_runner.py:125) (547402)
2025-06-14 04:11:47,694 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=35.4011s, count=538, qps in this process: 15.1973[0m (mp_runner.py:91) (547552)
2025-06-14 04:11:47,696 | [92mINFO[0m: [92mEnd search in concurrency 1: dur=35.41512132999924s, total_count=538, qps=15.1913[0m (mp_runner.py:139) (547402)
2025-06-14 04:11:48,458 | [92mINFO[0m: [92mUpdate largest qps with concurrency 1: current max_qps=15.1913[0m (mp_runner.py:143) (547402)
2025-06-14 04:11:49,466 | [92mINFO[0m: [92mSpawnProcess-1:3 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (547697)
2025-06-14 04:12:41,205 | [92mINFO[0m: [92mSpawnProcess-1:3 search entire test_data: cost=40.0733s, queries=1000, avg_recall=0.921, avg_ndcg=0.935,avg_latency=0.0401, p99=0.0256[0m (serial_runner.py:251) (547697)
2025-06-14 04:12:41,813 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=15.1913, serial_latency_p99=np.float64(0.0256), recall=np.float64(0.921), ndcg=np.float64(0.935), conc_num_list=[1], conc_qps_list=[15.1913], conc_latency_p99_list=[np.float64(0.02550053092112648)], conc_latency_avg_list=[np.float64(0.055774806899633225)])[0m (task_runner.py:186) (547402)
2025-06-14 04:12:41,813 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:11:06.465342'}, result=Metric(max_load_count=0, load_duration=0.0, qps=15.1913, serial_latency_p99=np.float64(0.0256), recall=np.float64(0.921), ndcg=np.float64(0.935), conc_num_list=[1], conc_qps_list=[15.1913], conc_latency_p99_list=[np.float64(0.02550053092112648)], conc_latency_avg_list=[np.float64(0.055774806899633225)]), label=ResultLabel.NORMAL[0m (interface.py:174) (547402)
2025-06-14 04:12:41,814 | INFO |Task summary: run_id=e7d32, task_label=e7d3275365ba4a56a816328f5bdfd8e9 (models.py:375)
2025-06-14 04:12:41,814 | INFO |DB      | db_label                      case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 04:12:41,814 | INFO |------- | ----------------------------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 04:12:41,814 | INFO |LanceDB | 2025-06-14T04:11:06.465342    Performance1536D5M e7d3275365ba4a56a816328f5bdfd8e9 | 0.0         15.1913    0.0256          0.921         0              | :)    (models.py:375)
2025-06-14 04:12:41,814 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_e7d3275365ba4a56a816328f5bdfd8e9_lancedb.json[0m (models.py:243) (547402)
2025-06-14 04:12:41,815 | [92mINFO[0m: [92mSuccess to finish task: label=e7d3275365ba4a56a816328f5bdfd8e9, run_id=e7d3275365ba4a56a816328f5bdfd8e9[0m (interface.py:213) (547402)

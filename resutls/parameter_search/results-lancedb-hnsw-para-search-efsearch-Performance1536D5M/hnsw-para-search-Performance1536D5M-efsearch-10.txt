2025-06-14 04:07:53,056 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T04:07:53.017913', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-5m', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=10), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[1], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (546481)
2025-06-14 04:07:53,056 | [92mINFO[0m: [92mgenerated uuid for the tasks: e7bd6060fe8849ca8b73cd822881d9d0[0m (interface.py:72) (546481)
2025-06-14 04:07:53,195 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 04:07:53,196 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 04:07:53,196 | INFO | LanceDB-2025-06-14T04:07:53.017913 | Performance  OpenAI-LARGE-5M         None | e7bd6060fe8849ca8b73cd822881d9d0 (task_runner.py:340)
2025-06-14 04:07:53,196 | [92mINFO[0m: [92mtask submitted: id=e7bd6060fe8849ca8b73cd822881d9d0, e7bd6060fe8849ca8b73cd822881d9d0, case number: 1[0m (interface.py:242) (546481)
2025-06-14 04:07:53,916 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:07:53.017913'}, drop_old=False[0m (interface.py:172) (546505)
2025-06-14 04:07:53,916 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (546505)
2025-06-14 04:07:54,054 | [92mINFO[0m: [92mSearch config: {'ef': 10}[0m (lancedb.py:38) (546505)
2025-06-14 04:07:56,770 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (546505)
2025-06-14 04:07:56,875 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (546505)
2025-06-14 04:07:56,944 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (546505)
2025-06-14 04:07:57,781 | [92mINFO[0m: [92mStart search 30s in concurrency 1, filters: None[0m (mp_runner.py:118) (546505)
2025-06-14 04:07:58,850 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=1[0m (mp_runner.py:125) (546505)
2025-06-14 04:08:33,053 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=34.1906s, count=527, qps in this process: 15.4136[0m (mp_runner.py:91) (546634)
2025-06-14 04:08:33,055 | [92mINFO[0m: [92mEnd search in concurrency 1: dur=34.20378522399551s, total_count=527, qps=15.4077[0m (mp_runner.py:139) (546505)
2025-06-14 04:08:33,702 | [92mINFO[0m: [92mUpdate largest qps with concurrency 1: current max_qps=15.4077[0m (mp_runner.py:143) (546505)
2025-06-14 04:08:34,723 | [92mINFO[0m: [92mSpawnProcess-1:3 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (546704)
2025-06-14 04:09:25,753 | [92mINFO[0m: [92mSpawnProcess-1:3 search entire test_data: cost=39.0951s, queries=1000, avg_recall=0.7259, avg_ndcg=0.7461,avg_latency=0.0391, p99=0.0238[0m (serial_runner.py:251) (546704)
2025-06-14 04:09:26,266 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=15.4077, serial_latency_p99=np.float64(0.0238), recall=np.float64(0.7259), ndcg=np.float64(0.7461), conc_num_list=[1], conc_qps_list=[15.4077], conc_latency_p99_list=[np.float64(0.026216618036414733)], conc_latency_avg_list=[np.float64(0.05692399749544216)])[0m (task_runner.py:186) (546505)
2025-06-14 04:09:26,267 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:07:53.017913'}, result=Metric(max_load_count=0, load_duration=0.0, qps=15.4077, serial_latency_p99=np.float64(0.0238), recall=np.float64(0.7259), ndcg=np.float64(0.7461), conc_num_list=[1], conc_qps_list=[15.4077], conc_latency_p99_list=[np.float64(0.026216618036414733)], conc_latency_avg_list=[np.float64(0.05692399749544216)]), label=ResultLabel.NORMAL[0m (interface.py:174) (546505)
2025-06-14 04:09:26,267 | INFO |Task summary: run_id=e7bd6, task_label=e7bd6060fe8849ca8b73cd822881d9d0 (models.py:375)
2025-06-14 04:09:26,267 | INFO |DB      | db_label                      case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 04:09:26,267 | INFO |------- | ----------------------------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 04:09:26,267 | INFO |LanceDB | 2025-06-14T04:07:53.017913    Performance1536D5M e7bd6060fe8849ca8b73cd822881d9d0 | 0.0         15.4077    0.0238          0.7259        0              | :)    (models.py:375)
2025-06-14 04:09:26,268 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_e7bd6060fe8849ca8b73cd822881d9d0_lancedb.json[0m (models.py:243) (546505)
2025-06-14 04:09:26,269 | [92mINFO[0m: [92mSuccess to finish task: label=e7bd6060fe8849ca8b73cd822881d9d0, run_id=e7bd6060fe8849ca8b73cd822881d9d0[0m (interface.py:213) (546505)

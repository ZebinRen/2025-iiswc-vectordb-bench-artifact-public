2025-06-14 04:28:07,979 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T04:28:07.940994', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-500k', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=35), case_config=CaseConfig(case_id=<CaseType.Performance1536D500K: 10>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[1], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (554055)
2025-06-14 04:28:07,980 | [92mINFO[0m: [92mgenerated uuid for the tasks: b45c24596b8344db9c197c0b2b0f3790[0m (interface.py:72) (554055)
2025-06-14 04:28:08,129 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 04:28:08,129 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 04:28:08,129 | INFO | LanceDB-2025-06-14T04:28:07.940994 | Performance  OpenAI-MEDIUM-500K      None | b45c24596b8344db9c197c0b2b0f3790 (task_runner.py:340)
2025-06-14 04:28:08,129 | [92mINFO[0m: [92mtask submitted: id=b45c24596b8344db9c197c0b2b0f3790, b45c24596b8344db9c197c0b2b0f3790, case number: 1[0m (interface.py:242) (554055)
2025-06-14 04:28:08,864 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:28:07.940994'}, drop_old=False[0m (interface.py:172) (554079)
2025-06-14 04:28:08,864 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (554079)
2025-06-14 04:28:09,011 | [92mINFO[0m: [92mSearch config: {'ef': 35}[0m (lancedb.py:38) (554079)
2025-06-14 04:28:10,288 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (554079)
2025-06-14 04:28:10,388 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (554079)
2025-06-14 04:28:10,466 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (554079)
2025-06-14 04:28:11,294 | [92mINFO[0m: [92mStart search 30s in concurrency 1, filters: None[0m (mp_runner.py:118) (554079)
2025-06-14 04:28:12,357 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=1[0m (mp_runner.py:125) (554079)
2025-06-14 04:28:42,944 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.5733s, count=952, qps in this process: 31.1383[0m (mp_runner.py:91) (554207)
2025-06-14 04:28:42,946 | [92mINFO[0m: [92mEnd search in concurrency 1: dur=30.588986567003303s, total_count=952, qps=31.1223[0m (mp_runner.py:139) (554079)
2025-06-14 04:28:43,373 | [92mINFO[0m: [92mUpdate largest qps with concurrency 1: current max_qps=31.1223[0m (mp_runner.py:143) (554079)
2025-06-14 04:28:44,380 | [92mINFO[0m: [92mSpawnProcess-1:3 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (554310)
2025-06-14 04:29:23,397 | [92mINFO[0m: [92mSpawnProcess-1:3 search entire test_data: cost=32.9524s, queries=1000, avg_recall=0.9043, avg_ndcg=0.92,avg_latency=0.033, p99=0.035[0m (serial_runner.py:251) (554310)
2025-06-14 04:29:23,657 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=31.1223, serial_latency_p99=np.float64(0.035), recall=np.float64(0.9043), ndcg=np.float64(0.92), conc_num_list=[1], conc_qps_list=[31.1223], conc_latency_p99_list=[np.float64(0.03494501695684448)], conc_latency_avg_list=[np.float64(0.0315085785820173)])[0m (task_runner.py:186) (554079)
2025-06-14 04:29:23,657 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:28:07.940994'}, result=Metric(max_load_count=0, load_duration=0.0, qps=31.1223, serial_latency_p99=np.float64(0.035), recall=np.float64(0.9043), ndcg=np.float64(0.92), conc_num_list=[1], conc_qps_list=[31.1223], conc_latency_p99_list=[np.float64(0.03494501695684448)], conc_latency_avg_list=[np.float64(0.0315085785820173)]), label=ResultLabel.NORMAL[0m (interface.py:174) (554079)
2025-06-14 04:29:23,658 | INFO |Task summary: run_id=b45c2, task_label=b45c24596b8344db9c197c0b2b0f3790 (models.py:375)
2025-06-14 04:29:23,658 | INFO |DB      | db_label                      case                 label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 04:29:23,658 | INFO |------- | ----------------------------- -------------------- -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 04:29:23,658 | INFO |LanceDB | 2025-06-14T04:28:07.940994    Performance1536D500K b45c24596b8344db9c197c0b2b0f3790 | 0.0         31.1223    0.035           0.9043        0              | :)    (models.py:375)
2025-06-14 04:29:23,658 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_b45c24596b8344db9c197c0b2b0f3790_lancedb.json[0m (models.py:243) (554079)
2025-06-14 04:29:23,659 | [92mINFO[0m: [92mSuccess to finish task: label=b45c24596b8344db9c197c0b2b0f3790, run_id=b45c24596b8344db9c197c0b2b0f3790[0m (interface.py:213) (554079)

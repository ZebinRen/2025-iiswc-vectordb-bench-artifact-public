2025-06-14 04:21:58,308 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T04:21:58.269622', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-500k', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=55), case_config=CaseConfig(case_id=<CaseType.Performance1536D500K: 10>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[1], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (550808)
2025-06-14 04:21:58,308 | [92mINFO[0m: [92mgenerated uuid for the tasks: b86bc3694b4548389540f1511511d377[0m (interface.py:72) (550808)
2025-06-14 04:21:58,448 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 04:21:58,449 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 04:21:58,449 | INFO | LanceDB-2025-06-14T04:21:58.269622 | Performance  OpenAI-MEDIUM-500K      None | b86bc3694b4548389540f1511511d377 (task_runner.py:340)
2025-06-14 04:21:58,449 | [92mINFO[0m: [92mtask submitted: id=b86bc3694b4548389540f1511511d377, b86bc3694b4548389540f1511511d377, case number: 1[0m (interface.py:242) (550808)
2025-06-14 04:21:59,248 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:21:58.269622'}, drop_old=False[0m (interface.py:172) (550832)
2025-06-14 04:21:59,248 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (550832)
2025-06-14 04:21:59,393 | [92mINFO[0m: [92mSearch config: {'ef': 55}[0m (lancedb.py:38) (550832)
2025-06-14 04:22:00,675 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (550832)
2025-06-14 04:22:00,770 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (550832)
2025-06-14 04:22:00,846 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (550832)
2025-06-14 04:22:01,703 | [92mINFO[0m: [92mStart search 30s in concurrency 1, filters: None[0m (mp_runner.py:118) (550832)
2025-06-14 04:22:02,771 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=1[0m (mp_runner.py:125) (550832)
2025-06-14 04:22:33,355 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.5661s, count=1037, qps in this process: 33.9265[0m (mp_runner.py:91) (550960)
2025-06-14 04:22:33,358 | [92mINFO[0m: [92mEnd search in concurrency 1: dur=30.586078452004585s, total_count=1037, qps=33.9043[0m (mp_runner.py:139) (550832)
2025-06-14 04:22:33,808 | [92mINFO[0m: [92mUpdate largest qps with concurrency 1: current max_qps=33.9043[0m (mp_runner.py:143) (550832)
2025-06-14 04:22:34,817 | [92mINFO[0m: [92mSpawnProcess-1:3 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (551390)
2025-06-14 04:23:08,919 | [92mINFO[0m: [92mSpawnProcess-1:3 search entire test_data: cost=29.2325s, queries=1000, avg_recall=0.9251, avg_ndcg=0.94,avg_latency=0.0292, p99=0.0353[0m (serial_runner.py:251) (551390)
2025-06-14 04:23:09,170 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=33.9043, serial_latency_p99=np.float64(0.0353), recall=np.float64(0.9251), ndcg=np.float64(0.94), conc_num_list=[1], conc_qps_list=[33.9043], conc_latency_p99_list=[np.float64(0.03493133171927184)], conc_latency_avg_list=[np.float64(0.028941995523651756)])[0m (task_runner.py:186) (550832)
2025-06-14 04:23:09,170 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:21:58.269622'}, result=Metric(max_load_count=0, load_duration=0.0, qps=33.9043, serial_latency_p99=np.float64(0.0353), recall=np.float64(0.9251), ndcg=np.float64(0.94), conc_num_list=[1], conc_qps_list=[33.9043], conc_latency_p99_list=[np.float64(0.03493133171927184)], conc_latency_avg_list=[np.float64(0.028941995523651756)]), label=ResultLabel.NORMAL[0m (interface.py:174) (550832)
2025-06-14 04:23:09,171 | INFO |Task summary: run_id=b86bc, task_label=b86bc3694b4548389540f1511511d377 (models.py:375)
2025-06-14 04:23:09,171 | INFO |DB      | db_label                      case                 label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 04:23:09,171 | INFO |------- | ----------------------------- -------------------- -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 04:23:09,171 | INFO |LanceDB | 2025-06-14T04:21:58.269622    Performance1536D500K b86bc3694b4548389540f1511511d377 | 0.0         33.9043    0.0353          0.9251        0              | :)    (models.py:375)
2025-06-14 04:23:09,172 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_b86bc3694b4548389540f1511511d377_lancedb.json[0m (models.py:243) (550832)
2025-06-14 04:23:09,173 | [92mINFO[0m: [92mSuccess to finish task: label=b86bc3694b4548389540f1511511d377, run_id=b86bc3694b4548389540f1511511d377[0m (interface.py:213) (550832)

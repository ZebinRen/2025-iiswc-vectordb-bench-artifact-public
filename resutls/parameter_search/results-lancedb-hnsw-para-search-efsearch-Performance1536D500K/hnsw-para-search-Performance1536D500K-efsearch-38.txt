2025-06-14 04:26:54,928 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T04:26:54.889690', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-500k', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=38), case_config=CaseConfig(case_id=<CaseType.Performance1536D500K: 10>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[1], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (553481)
2025-06-14 04:26:54,928 | [92mINFO[0m: [92mgenerated uuid for the tasks: 82171ff91cbe4bab917e5c5f9d576ee0[0m (interface.py:72) (553481)
2025-06-14 04:26:55,073 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 04:26:55,073 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 04:26:55,073 | INFO | LanceDB-2025-06-14T04:26:54.889690 | Performance  OpenAI-MEDIUM-500K      None | 82171ff91cbe4bab917e5c5f9d576ee0 (task_runner.py:340)
2025-06-14 04:26:55,073 | [92mINFO[0m: [92mtask submitted: id=82171ff91cbe4bab917e5c5f9d576ee0, 82171ff91cbe4bab917e5c5f9d576ee0, case number: 1[0m (interface.py:242) (553481)
2025-06-14 04:26:55,788 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:26:54.889690'}, drop_old=False[0m (interface.py:172) (553505)
2025-06-14 04:26:55,788 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (553505)
2025-06-14 04:26:55,929 | [92mINFO[0m: [92mSearch config: {'ef': 38}[0m (lancedb.py:38) (553505)
2025-06-14 04:26:57,209 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (553505)
2025-06-14 04:26:57,308 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (553505)
2025-06-14 04:26:57,348 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (553505)
2025-06-14 04:26:58,188 | [92mINFO[0m: [92mStart search 30s in concurrency 1, filters: None[0m (mp_runner.py:118) (553505)
2025-06-14 04:26:59,255 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=1[0m (mp_runner.py:125) (553505)
2025-06-14 04:27:29,609 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.3365s, count=931, qps in this process: 30.6891[0m (mp_runner.py:91) (553633)
2025-06-14 04:27:29,612 | [92mINFO[0m: [92mEnd search in concurrency 1: dur=30.355491538000933s, total_count=931, qps=30.6699[0m (mp_runner.py:139) (553505)
2025-06-14 04:27:30,030 | [92mINFO[0m: [92mUpdate largest qps with concurrency 1: current max_qps=30.6699[0m (mp_runner.py:143) (553505)
2025-06-14 04:27:31,014 | [92mINFO[0m: [92mSpawnProcess-1:3 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (553908)
2025-06-14 04:28:06,593 | [92mINFO[0m: [92mSpawnProcess-1:3 search entire test_data: cost=30.4654s, queries=1000, avg_recall=0.9083, avg_ndcg=0.9238,avg_latency=0.0305, p99=0.0348[0m (serial_runner.py:251) (553908)
2025-06-14 04:28:06,844 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=30.6699, serial_latency_p99=np.float64(0.0348), recall=np.float64(0.9083), ndcg=np.float64(0.9238), conc_num_list=[1], conc_qps_list=[30.6699], conc_latency_p99_list=[np.float64(0.034978951796074395)], conc_latency_avg_list=[np.float64(0.03223050573355913)])[0m (task_runner.py:186) (553505)
2025-06-14 04:28:06,844 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T04:26:54.889690'}, result=Metric(max_load_count=0, load_duration=0.0, qps=30.6699, serial_latency_p99=np.float64(0.0348), recall=np.float64(0.9083), ndcg=np.float64(0.9238), conc_num_list=[1], conc_qps_list=[30.6699], conc_latency_p99_list=[np.float64(0.034978951796074395)], conc_latency_avg_list=[np.float64(0.03223050573355913)]), label=ResultLabel.NORMAL[0m (interface.py:174) (553505)
2025-06-14 04:28:06,845 | INFO |Task summary: run_id=82171, task_label=82171ff91cbe4bab917e5c5f9d576ee0 (models.py:375)
2025-06-14 04:28:06,845 | INFO |DB      | db_label                      case                 label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 04:28:06,845 | INFO |------- | ----------------------------- -------------------- -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 04:28:06,845 | INFO |LanceDB | 2025-06-14T04:26:54.889690    Performance1536D500K 82171ff91cbe4bab917e5c5f9d576ee0 | 0.0         30.6699    0.0348          0.9083        0              | :)    (models.py:375)
2025-06-14 04:28:06,845 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_82171ff91cbe4bab917e5c5f9d576ee0_lancedb.json[0m (models.py:243) (553505)
2025-06-14 04:28:06,846 | [92mINFO[0m: [92mSuccess to finish task: label=82171ff91cbe4bab917e5c5f9d576ee0, run_id=82171ff91cbe4bab917e5c5f9d576ee0[0m (interface.py:213) (553505)

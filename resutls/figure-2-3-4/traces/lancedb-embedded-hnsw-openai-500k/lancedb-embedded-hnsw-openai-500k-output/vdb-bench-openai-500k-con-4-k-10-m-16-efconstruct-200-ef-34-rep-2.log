2025-06-14 17:27:45,156 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T17:27:45.110317', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-500k', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=34), case_config=CaseConfig(case_id=<CaseType.Performance1536D500K: 10>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_concurrent'])
[0m (cli.py:516) (1539252)
2025-06-14 17:27:45,157 | [92mINFO[0m: [92mgenerated uuid for the tasks: c7b1190757b14caf90f1ee8981e51327[0m (interface.py:72) (1539252)
2025-06-14 17:27:45,369 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 17:27:45,369 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 17:27:45,369 | INFO | LanceDB-2025-06-14T17:27:45.110317 | Performance  OpenAI-MEDIUM-500K      None | c7b1190757b14caf90f1ee8981e51327 (task_runner.py:340)
2025-06-14 17:27:45,370 | [92mINFO[0m: [92mtask submitted: id=c7b1190757b14caf90f1ee8981e51327, c7b1190757b14caf90f1ee8981e51327, case number: 1[0m (interface.py:242) (1539252)
2025-06-14 17:27:46,092 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:27:45.110317'}, drop_old=False[0m (interface.py:172) (1539289)
2025-06-14 17:27:46,092 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (1539289)
2025-06-14 17:27:46,227 | [92mINFO[0m: [92mSearch config: {'ef': 34}[0m (lancedb.py:38) (1539289)
2025-06-14 17:27:47,791 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (1539289)
2025-06-14 17:27:47,959 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (1539289)
2025-06-14 17:27:48,047 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (1539289)
2025-06-14 17:27:48,837 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (1539289)
2025-06-14 17:27:52,911 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (1539289)
2025-06-14 17:28:23,266 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.3358s, count=877, qps in this process: 28.9097[0m (mp_runner.py:91) (1539441)
2025-06-14 17:28:23,267 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=30.336s, count=876, qps in this process: 28.8766[0m (mp_runner.py:91) (1539442)
2025-06-14 17:28:23,272 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=30.342s, count=874, qps in this process: 28.805[0m (mp_runner.py:91) (1539443)
2025-06-14 17:28:23,497 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.5669s, count=879, qps in this process: 28.7566[0m (mp_runner.py:91) (1539438)
2025-06-14 17:28:23,503 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=30.590953937004087s, total_count=3506, qps=114.609[0m (mp_runner.py:139) (1539289)
2025-06-14 17:28:23,941 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=114.609[0m (mp_runner.py:143) (1539289)
2025-06-14 17:28:23,942 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=114.609, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[114.609], conc_latency_p99_list=[np.float64(0.034937670010549475)], conc_latency_avg_list=[np.float64(0.03422587139552009)])[0m (task_runner.py:186) (1539289)
2025-06-14 17:28:23,942 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:27:45.110317'}, result=Metric(max_load_count=0, load_duration=0.0, qps=114.609, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[114.609], conc_latency_p99_list=[np.float64(0.034937670010549475)], conc_latency_avg_list=[np.float64(0.03422587139552009)]), label=ResultLabel.NORMAL[0m (interface.py:174) (1539289)
2025-06-14 17:28:23,943 | INFO |Task summary: run_id=c7b11, task_label=c7b1190757b14caf90f1ee8981e51327 (models.py:375)
2025-06-14 17:28:23,943 | INFO |DB      | db_label                      case                 label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 17:28:23,943 | INFO |------- | ----------------------------- -------------------- -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 17:28:23,943 | INFO |LanceDB | 2025-06-14T17:27:45.110317    Performance1536D500K c7b1190757b14caf90f1ee8981e51327 | 0.0         114.609    0.0             0.0           0              | :)    (models.py:375)
2025-06-14 17:28:23,943 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_c7b1190757b14caf90f1ee8981e51327_lancedb.json[0m (models.py:243) (1539289)
2025-06-14 17:28:23,944 | [92mINFO[0m: [92mSuccess to finish task: label=c7b1190757b14caf90f1ee8981e51327, run_id=c7b1190757b14caf90f1ee8981e51327[0m (interface.py:213) (1539289)

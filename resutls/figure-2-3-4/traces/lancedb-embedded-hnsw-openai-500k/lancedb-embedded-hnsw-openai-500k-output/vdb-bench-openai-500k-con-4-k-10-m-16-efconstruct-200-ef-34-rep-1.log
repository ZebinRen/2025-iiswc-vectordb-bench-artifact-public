2025-06-14 17:27:04,333 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T17:27:04.287958', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-500k', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=34), case_config=CaseConfig(case_id=<CaseType.Performance1536D500K: 10>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_concurrent'])
[0m (cli.py:516) (1538549)
2025-06-14 17:27:04,334 | [92mINFO[0m: [92mgenerated uuid for the tasks: a9017c64ce9442868f6f0d87524db3d3[0m (interface.py:72) (1538549)
2025-06-14 17:27:04,541 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 17:27:04,542 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 17:27:04,542 | INFO | LanceDB-2025-06-14T17:27:04.287958 | Performance  OpenAI-MEDIUM-500K      None | a9017c64ce9442868f6f0d87524db3d3 (task_runner.py:340)
2025-06-14 17:27:04,542 | [92mINFO[0m: [92mtask submitted: id=a9017c64ce9442868f6f0d87524db3d3, a9017c64ce9442868f6f0d87524db3d3, case number: 1[0m (interface.py:242) (1538549)
2025-06-14 17:27:05,256 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:27:04.287958'}, drop_old=False[0m (interface.py:172) (1538586)
2025-06-14 17:27:05,256 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (1538586)
2025-06-14 17:27:05,389 | [92mINFO[0m: [92mSearch config: {'ef': 34}[0m (lancedb.py:38) (1538586)
2025-06-14 17:27:06,910 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (1538586)
2025-06-14 17:27:07,076 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (1538586)
2025-06-14 17:27:07,162 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (1538586)
2025-06-14 17:27:08,001 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (1538586)
2025-06-14 17:27:12,077 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (1538586)
2025-06-14 17:27:42,420 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.3262s, count=875, qps in this process: 28.8529[0m (mp_runner.py:91) (1538738)
2025-06-14 17:27:42,421 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=30.3257s, count=879, qps in this process: 28.9853[0m (mp_runner.py:91) (1538740)
2025-06-14 17:27:42,668 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=30.5727s, count=876, qps in this process: 28.653[0m (mp_runner.py:91) (1538739)
2025-06-14 17:27:42,676 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.5797s, count=873, qps in this process: 28.5484[0m (mp_runner.py:91) (1538735)
2025-06-14 17:27:42,682 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=30.604491974998382s, total_count=3503, qps=114.4603[0m (mp_runner.py:139) (1538586)
2025-06-14 17:27:43,310 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=114.4603[0m (mp_runner.py:143) (1538586)
2025-06-14 17:27:43,310 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=114.4603, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[114.4603], conc_latency_p99_list=[np.float64(0.034709074331622104)], conc_latency_avg_list=[np.float64(0.03425916031860926)])[0m (task_runner.py:186) (1538586)
2025-06-14 17:27:43,311 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:27:04.287958'}, result=Metric(max_load_count=0, load_duration=0.0, qps=114.4603, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[114.4603], conc_latency_p99_list=[np.float64(0.034709074331622104)], conc_latency_avg_list=[np.float64(0.03425916031860926)]), label=ResultLabel.NORMAL[0m (interface.py:174) (1538586)
2025-06-14 17:27:43,311 | INFO |Task summary: run_id=a9017, task_label=a9017c64ce9442868f6f0d87524db3d3 (models.py:375)
2025-06-14 17:27:43,311 | INFO |DB      | db_label                      case                 label                            | load_dur    qps         latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 17:27:43,311 | INFO |------- | ----------------------------- -------------------- -------------------------------- | ----------- ----------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 17:27:43,311 | INFO |LanceDB | 2025-06-14T17:27:04.287958    Performance1536D500K a9017c64ce9442868f6f0d87524db3d3 | 0.0         114.4603    0.0             0.0           0              | :)    (models.py:375)
2025-06-14 17:27:43,311 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_a9017c64ce9442868f6f0d87524db3d3_lancedb.json[0m (models.py:243) (1538586)
2025-06-14 17:27:43,312 | [92mINFO[0m: [92mSuccess to finish task: label=a9017c64ce9442868f6f0d87524db3d3, run_id=a9017c64ce9442868f6f0d87524db3d3[0m (interface.py:213) (1538586)

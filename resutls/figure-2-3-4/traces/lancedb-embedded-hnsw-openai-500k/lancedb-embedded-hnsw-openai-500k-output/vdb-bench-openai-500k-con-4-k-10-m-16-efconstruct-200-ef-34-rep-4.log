2025-06-14 17:29:06,377 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T17:29:06.331686', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-500k', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=34), case_config=CaseConfig(case_id=<CaseType.Performance1536D500K: 10>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_concurrent'])
[0m (cli.py:516) (1540653)
2025-06-14 17:29:06,378 | [92mINFO[0m: [92mgenerated uuid for the tasks: 13fffa853bf347449d8da0f1b70343a8[0m (interface.py:72) (1540653)
2025-06-14 17:29:06,593 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 17:29:06,593 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 17:29:06,593 | INFO | LanceDB-2025-06-14T17:29:06.331686 | Performance  OpenAI-MEDIUM-500K      None | 13fffa853bf347449d8da0f1b70343a8 (task_runner.py:340)
2025-06-14 17:29:06,593 | [92mINFO[0m: [92mtask submitted: id=13fffa853bf347449d8da0f1b70343a8, 13fffa853bf347449d8da0f1b70343a8, case number: 1[0m (interface.py:242) (1540653)
2025-06-14 17:29:07,315 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:29:06.331686'}, drop_old=False[0m (interface.py:172) (1540690)
2025-06-14 17:29:07,316 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (1540690)
2025-06-14 17:29:07,452 | [92mINFO[0m: [92mSearch config: {'ef': 34}[0m (lancedb.py:38) (1540690)
2025-06-14 17:29:09,000 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (1540690)
2025-06-14 17:29:09,164 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (1540690)
2025-06-14 17:29:09,250 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (1540690)
2025-06-14 17:29:10,049 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (1540690)
2025-06-14 17:29:14,122 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (1540690)
2025-06-14 17:29:44,704 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=30.5631s, count=883, qps in this process: 28.891[0m (mp_runner.py:91) (1540843)
2025-06-14 17:29:44,704 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=30.5638s, count=887, qps in this process: 29.0213[0m (mp_runner.py:91) (1540844)
2025-06-14 17:29:44,707 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.563s, count=885, qps in this process: 28.9566[0m (mp_runner.py:91) (1540839)
2025-06-14 17:29:44,708 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.5684s, count=885, qps in this process: 28.9515[0m (mp_runner.py:91) (1540842)
2025-06-14 17:29:44,716 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=30.592787301997305s, total_count=3540, qps=115.7135[0m (mp_runner.py:139) (1540690)
2025-06-14 17:29:45,109 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=115.7135[0m (mp_runner.py:143) (1540690)
2025-06-14 17:29:45,110 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=115.7135, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[115.7135], conc_latency_p99_list=[np.float64(0.034301784757117273)], conc_latency_avg_list=[np.float64(0.03391890873063154)])[0m (task_runner.py:186) (1540690)
2025-06-14 17:29:45,110 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:29:06.331686'}, result=Metric(max_load_count=0, load_duration=0.0, qps=115.7135, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[115.7135], conc_latency_p99_list=[np.float64(0.034301784757117273)], conc_latency_avg_list=[np.float64(0.03391890873063154)]), label=ResultLabel.NORMAL[0m (interface.py:174) (1540690)
2025-06-14 17:29:45,110 | INFO |Task summary: run_id=13fff, task_label=13fffa853bf347449d8da0f1b70343a8 (models.py:375)
2025-06-14 17:29:45,110 | INFO |DB      | db_label                      case                 label                            | load_dur    qps         latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 17:29:45,111 | INFO |------- | ----------------------------- -------------------- -------------------------------- | ----------- ----------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 17:29:45,111 | INFO |LanceDB | 2025-06-14T17:29:06.331686    Performance1536D500K 13fffa853bf347449d8da0f1b70343a8 | 0.0         115.7135    0.0             0.0           0              | :)    (models.py:375)
2025-06-14 17:29:45,111 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_13fffa853bf347449d8da0f1b70343a8_lancedb.json[0m (models.py:243) (1540690)
2025-06-14 17:29:45,113 | [92mINFO[0m: [92mSuccess to finish task: label=13fffa853bf347449d8da0f1b70343a8, run_id=13fffa853bf347449d8da0f1b70343a8[0m (interface.py:213) (1540690)

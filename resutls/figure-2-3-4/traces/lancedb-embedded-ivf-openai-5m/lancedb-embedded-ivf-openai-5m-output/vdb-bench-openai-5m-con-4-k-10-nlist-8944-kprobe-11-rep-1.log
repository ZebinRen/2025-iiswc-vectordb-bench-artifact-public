2025-06-14 15:51:12,602 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T15:51:12.555745', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-ivfpq-openai-5m', token=None), db_case_config=LanceDBIndexConfig(index=<IndexType.IVFPQ: 'IVF_PQ'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=8944, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=11), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_concurrent'])
[0m (cli.py:516) (1291921)
2025-06-14 15:51:12,603 | [92mINFO[0m: [92mgenerated uuid for the tasks: f0661ccc06834d5f91da1a7c27a77845[0m (interface.py:72) (1291921)
2025-06-14 15:51:12,822 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 15:51:12,822 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 15:51:12,822 | INFO | LanceDB-2025-06-14T15:51:12.555745 | Performance  OpenAI-LARGE-5M         None | f0661ccc06834d5f91da1a7c27a77845 (task_runner.py:340)
2025-06-14 15:51:12,822 | [92mINFO[0m: [92mtask submitted: id=f0661ccc06834d5f91da1a7c27a77845, f0661ccc06834d5f91da1a7c27a77845, case number: 1[0m (interface.py:242) (1291921)
2025-06-14 15:51:13,541 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T15:51:12.555745'}, drop_old=False[0m (interface.py:172) (1291958)
2025-06-14 15:51:13,541 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (1291958)
2025-06-14 15:51:13,675 | [92mINFO[0m: [92mSearch config: {'nprobes': 11}[0m (lancedb.py:38) (1291958)
2025-06-14 15:51:16,667 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (1291958)
2025-06-14 15:51:16,840 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (1291958)
2025-06-14 15:51:16,920 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (1291958)
2025-06-14 15:51:17,716 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (1291958)
2025-06-14 15:51:21,793 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (1291958)
2025-06-14 15:51:51,862 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=30.0576s, count=51, qps in this process: 1.6967[0m (mp_runner.py:91) (1292125)
2025-06-14 15:51:52,163 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=30.36s, count=53, qps in this process: 1.7457[0m (mp_runner.py:91) (1292126)
2025-06-14 15:51:52,166 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.3608s, count=52, qps in this process: 1.7127[0m (mp_runner.py:91) (1292121)
2025-06-14 15:51:52,215 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.4116s, count=53, qps in this process: 1.7428[0m (mp_runner.py:91) (1292124)
2025-06-14 15:51:52,220 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=30.4258351019962s, total_count=209, qps=6.8692[0m (mp_runner.py:139) (1291958)
2025-06-14 15:51:52,775 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=6.8692[0m (mp_runner.py:143) (1291958)
2025-06-14 15:51:52,776 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=6.8692, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[6.8692], conc_latency_p99_list=[np.float64(0.9422138558491131)], conc_latency_avg_list=[np.float64(0.5785242953202236)])[0m (task_runner.py:186) (1291958)
2025-06-14 15:51:52,777 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T15:51:12.555745'}, result=Metric(max_load_count=0, load_duration=0.0, qps=6.8692, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[6.8692], conc_latency_p99_list=[np.float64(0.9422138558491131)], conc_latency_avg_list=[np.float64(0.5785242953202236)]), label=ResultLabel.NORMAL[0m (interface.py:174) (1291958)
2025-06-14 15:51:52,777 | INFO |Task summary: run_id=f0661, task_label=f0661ccc06834d5f91da1a7c27a77845 (models.py:375)
2025-06-14 15:51:52,778 | INFO |DB      | db_label                      case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 15:51:52,778 | INFO |------- | ----------------------------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 15:51:52,778 | INFO |LanceDB | 2025-06-14T15:51:12.555745    Performance1536D5M f0661ccc06834d5f91da1a7c27a77845 | 0.0         6.8692     0.0             0.0           0              | :)    (models.py:375)
2025-06-14 15:51:52,779 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_f0661ccc06834d5f91da1a7c27a77845_lancedb.json[0m (models.py:243) (1291958)
2025-06-14 15:51:52,780 | [92mINFO[0m: [92mSuccess to finish task: label=f0661ccc06834d5f91da1a7c27a77845, run_id=f0661ccc06834d5f91da1a7c27a77845[0m (interface.py:213) (1291958)

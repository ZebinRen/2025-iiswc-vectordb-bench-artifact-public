2025-06-14 15:52:36,445 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T15:52:36.399299', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-ivfpq-openai-5m', token=None), db_case_config=LanceDBIndexConfig(index=<IndexType.IVFPQ: 'IVF_PQ'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=8944, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=11), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_concurrent'])
[0m (cli.py:516) (1293311)
2025-06-14 15:52:36,446 | [92mINFO[0m: [92mgenerated uuid for the tasks: 5b17a8bd318f44d7b180aa1dc6e444d4[0m (interface.py:72) (1293311)
2025-06-14 15:52:36,665 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 15:52:36,666 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 15:52:36,666 | INFO | LanceDB-2025-06-14T15:52:36.399299 | Performance  OpenAI-LARGE-5M         None | 5b17a8bd318f44d7b180aa1dc6e444d4 (task_runner.py:340)
2025-06-14 15:52:36,666 | [92mINFO[0m: [92mtask submitted: id=5b17a8bd318f44d7b180aa1dc6e444d4, 5b17a8bd318f44d7b180aa1dc6e444d4, case number: 1[0m (interface.py:242) (1293311)
2025-06-14 15:52:37,381 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T15:52:36.399299'}, drop_old=False[0m (interface.py:172) (1293348)
2025-06-14 15:52:37,381 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (1293348)
2025-06-14 15:52:37,516 | [92mINFO[0m: [92mSearch config: {'nprobes': 11}[0m (lancedb.py:38) (1293348)
2025-06-14 15:52:40,450 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (1293348)
2025-06-14 15:52:40,625 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (1293348)
2025-06-14 15:52:40,676 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (1293348)
2025-06-14 15:52:41,474 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (1293348)
2025-06-14 15:52:45,548 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (1293348)
2025-06-14 15:53:15,718 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.1586s, count=52, qps in this process: 1.7242[0m (mp_runner.py:91) (1293511)
2025-06-14 15:53:15,883 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=30.3265s, count=53, qps in this process: 1.7476[0m (mp_runner.py:91) (1293515)
2025-06-14 15:53:15,895 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=30.3357s, count=53, qps in this process: 1.7471[0m (mp_runner.py:91) (1293516)
2025-06-14 15:53:16,088 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.5289s, count=53, qps in this process: 1.7361[0m (mp_runner.py:91) (1293514)
2025-06-14 15:53:16,093 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=30.54441648100328s, total_count=211, qps=6.908[0m (mp_runner.py:139) (1293348)
2025-06-14 15:53:16,666 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=6.908[0m (mp_runner.py:143) (1293348)
2025-06-14 15:53:16,667 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=6.908, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[6.908], conc_latency_p99_list=[np.float64(0.9420144947973312)], conc_latency_avg_list=[np.float64(0.5737032353041045)])[0m (task_runner.py:186) (1293348)
2025-06-14 15:53:16,667 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T15:52:36.399299'}, result=Metric(max_load_count=0, load_duration=0.0, qps=6.908, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[6.908], conc_latency_p99_list=[np.float64(0.9420144947973312)], conc_latency_avg_list=[np.float64(0.5737032353041045)]), label=ResultLabel.NORMAL[0m (interface.py:174) (1293348)
2025-06-14 15:53:16,668 | INFO |Task summary: run_id=5b17a, task_label=5b17a8bd318f44d7b180aa1dc6e444d4 (models.py:375)
2025-06-14 15:53:16,668 | INFO |DB      | db_label                      case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 15:53:16,668 | INFO |------- | ----------------------------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 15:53:16,668 | INFO |LanceDB | 2025-06-14T15:52:36.399299    Performance1536D5M 5b17a8bd318f44d7b180aa1dc6e444d4 | 0.0         6.908      0.0             0.0           0              | :)    (models.py:375)
2025-06-14 15:53:16,668 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_5b17a8bd318f44d7b180aa1dc6e444d4_lancedb.json[0m (models.py:243) (1293348)
2025-06-14 15:53:16,669 | [92mINFO[0m: [92mSuccess to finish task: label=5b17a8bd318f44d7b180aa1dc6e444d4, run_id=5b17a8bd318f44d7b180aa1dc6e444d4[0m (interface.py:213) (1293348)

2025-06-14 15:50:30,756 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T15:50:30.707769', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-ivfpq-openai-5m', token=None), db_case_config=LanceDBIndexConfig(index=<IndexType.IVFPQ: 'IVF_PQ'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=8944, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=11), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_concurrent'])
[0m (cli.py:516) (1291231)
2025-06-14 15:50:30,756 | [92mINFO[0m: [92mgenerated uuid for the tasks: 3a749907be7a4d11a4f9c17c4f3b7fe7[0m (interface.py:72) (1291231)
2025-06-14 15:50:30,971 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 15:50:30,971 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 15:50:30,971 | INFO | LanceDB-2025-06-14T15:50:30.707769 | Performance  OpenAI-LARGE-5M         None | 3a749907be7a4d11a4f9c17c4f3b7fe7 (task_runner.py:340)
2025-06-14 15:50:30,971 | [92mINFO[0m: [92mtask submitted: id=3a749907be7a4d11a4f9c17c4f3b7fe7, 3a749907be7a4d11a4f9c17c4f3b7fe7, case number: 1[0m (interface.py:242) (1291231)
2025-06-14 15:50:31,682 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T15:50:30.707769'}, drop_old=False[0m (interface.py:172) (1291268)
2025-06-14 15:50:31,682 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (1291268)
2025-06-14 15:50:31,814 | [92mINFO[0m: [92mSearch config: {'nprobes': 11}[0m (lancedb.py:38) (1291268)
2025-06-14 15:50:34,787 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (1291268)
2025-06-14 15:50:34,967 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (1291268)
2025-06-14 15:50:35,045 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (1291268)
2025-06-14 15:50:35,862 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (1291268)
2025-06-14 15:50:39,935 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (1291268)
2025-06-14 15:51:10,047 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=30.1013s, count=52, qps in this process: 1.7275[0m (mp_runner.py:91) (1291435)
2025-06-14 15:51:10,232 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.2858s, count=53, qps in this process: 1.75[0m (mp_runner.py:91) (1291434)
2025-06-14 15:51:10,249 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=30.3043s, count=52, qps in this process: 1.7159[0m (mp_runner.py:91) (1291436)
2025-06-14 15:51:10,254 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.3088s, count=53, qps in this process: 1.7487[0m (mp_runner.py:91) (1291431)
2025-06-14 15:51:10,260 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=30.32441911600472s, total_count=210, qps=6.9251[0m (mp_runner.py:139) (1291268)
2025-06-14 15:51:10,777 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=6.9251[0m (mp_runner.py:143) (1291268)
2025-06-14 15:51:10,778 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=6.9251, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[6.9251], conc_latency_p99_list=[np.float64(0.9104865281298405)], conc_latency_avg_list=[np.float64(0.5747022224100268)])[0m (task_runner.py:186) (1291268)
2025-06-14 15:51:10,778 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T15:50:30.707769'}, result=Metric(max_load_count=0, load_duration=0.0, qps=6.9251, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[6.9251], conc_latency_p99_list=[np.float64(0.9104865281298405)], conc_latency_avg_list=[np.float64(0.5747022224100268)]), label=ResultLabel.NORMAL[0m (interface.py:174) (1291268)
2025-06-14 15:51:10,778 | INFO |Task summary: run_id=3a749, task_label=3a749907be7a4d11a4f9c17c4f3b7fe7 (models.py:375)
2025-06-14 15:51:10,778 | INFO |DB      | db_label                      case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 15:51:10,778 | INFO |------- | ----------------------------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 15:51:10,778 | INFO |LanceDB | 2025-06-14T15:50:30.707769    Performance1536D5M 3a749907be7a4d11a4f9c17c4f3b7fe7 | 0.0         6.9251     0.0             0.0           0              | :)    (models.py:375)
2025-06-14 15:51:10,779 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_3a749907be7a4d11a4f9c17c4f3b7fe7_lancedb.json[0m (models.py:243) (1291268)
2025-06-14 15:51:10,780 | [92mINFO[0m: [92mSuccess to finish task: label=3a749907be7a4d11a4f9c17c4f3b7fe7, run_id=3a749907be7a4d11a4f9c17c4f3b7fe7[0m (interface.py:213) (1291268)

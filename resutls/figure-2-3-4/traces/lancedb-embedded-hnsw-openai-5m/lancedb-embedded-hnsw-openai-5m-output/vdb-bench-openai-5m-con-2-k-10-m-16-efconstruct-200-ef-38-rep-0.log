2025-06-14 17:49:02,903 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T17:49:02.862739', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-5m', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=38), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[2], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_concurrent'])
[0m (cli.py:516) (1591475)
2025-06-14 17:49:02,904 | [92mINFO[0m: [92mgenerated uuid for the tasks: 7f0e65b9896740069f923ca9d41c27f0[0m (interface.py:72) (1591475)
2025-06-14 17:49:03,084 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 17:49:03,085 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 17:49:03,085 | INFO | LanceDB-2025-06-14T17:49:02.862739 | Performance  OpenAI-LARGE-5M         None | 7f0e65b9896740069f923ca9d41c27f0 (task_runner.py:340)
2025-06-14 17:49:03,085 | [92mINFO[0m: [92mtask submitted: id=7f0e65b9896740069f923ca9d41c27f0, 7f0e65b9896740069f923ca9d41c27f0, case number: 1[0m (interface.py:242) (1591475)
2025-06-14 17:49:03,788 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:49:02.862739'}, drop_old=False[0m (interface.py:172) (1591510)
2025-06-14 17:49:03,788 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (1591510)
2025-06-14 17:49:03,927 | [92mINFO[0m: [92mSearch config: {'ef': 38}[0m (lancedb.py:38) (1591510)
2025-06-14 17:49:06,828 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (1591510)
2025-06-14 17:49:06,993 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (1591510)
2025-06-14 17:49:07,071 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (1591510)
2025-06-14 17:49:07,896 | [92mINFO[0m: [92mStart search 30s in concurrency 2, filters: None[0m (mp_runner.py:118) (1591510)
2025-06-14 17:49:09,966 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=2[0m (mp_runner.py:125) (1591510)
2025-06-14 17:49:44,968 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=34.9888s, count=520, qps in this process: 14.8619[0m (mp_runner.py:91) (1591672)
2025-06-14 17:49:45,118 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=35.1382s, count=520, qps in this process: 14.7987[0m (mp_runner.py:91) (1591669)
2025-06-14 17:49:45,124 | [92mINFO[0m: [92mEnd search in concurrency 2: dur=35.156877403002s, total_count=1040, qps=29.5817[0m (mp_runner.py:139) (1591510)
2025-06-14 17:49:45,795 | [92mINFO[0m: [92mUpdate largest qps with concurrency 2: current max_qps=29.5817[0m (mp_runner.py:143) (1591510)
2025-06-14 17:49:45,796 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=29.5817, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[2], conc_qps_list=[29.5817], conc_latency_p99_list=[np.float64(0.025737869866134133)], conc_latency_avg_list=[np.float64(0.05768855814543573)])[0m (task_runner.py:186) (1591510)
2025-06-14 17:49:45,796 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:49:02.862739'}, result=Metric(max_load_count=0, load_duration=0.0, qps=29.5817, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[2], conc_qps_list=[29.5817], conc_latency_p99_list=[np.float64(0.025737869866134133)], conc_latency_avg_list=[np.float64(0.05768855814543573)]), label=ResultLabel.NORMAL[0m (interface.py:174) (1591510)
2025-06-14 17:49:45,797 | INFO |Task summary: run_id=7f0e6, task_label=7f0e65b9896740069f923ca9d41c27f0 (models.py:375)
2025-06-14 17:49:45,797 | INFO |DB      | db_label                      case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 17:49:45,797 | INFO |------- | ----------------------------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 17:49:45,797 | INFO |LanceDB | 2025-06-14T17:49:02.862739    Performance1536D5M 7f0e65b9896740069f923ca9d41c27f0 | 0.0         29.5817    0.0             0.0           0              | :)    (models.py:375)
2025-06-14 17:49:45,798 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_7f0e65b9896740069f923ca9d41c27f0_lancedb.json[0m (models.py:243) (1591510)
2025-06-14 17:49:45,800 | [92mINFO[0m: [92mSuccess to finish task: label=7f0e65b9896740069f923ca9d41c27f0, run_id=7f0e65b9896740069f923ca9d41c27f0[0m (interface.py:213) (1591510)

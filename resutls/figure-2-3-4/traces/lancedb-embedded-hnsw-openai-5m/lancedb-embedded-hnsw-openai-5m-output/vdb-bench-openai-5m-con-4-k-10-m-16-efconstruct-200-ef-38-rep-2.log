2025-06-14 17:54:25,081 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T17:54:25.038896', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-5m', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=38), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_concurrent'])
[0m (cli.py:516) (1596186)
2025-06-14 17:54:25,081 | [92mINFO[0m: [92mgenerated uuid for the tasks: 48bf55bcb1dc443aa7812eb288eab08a[0m (interface.py:72) (1596186)
2025-06-14 17:54:25,286 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 17:54:25,286 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 17:54:25,286 | INFO | LanceDB-2025-06-14T17:54:25.038896 | Performance  OpenAI-LARGE-5M         None | 48bf55bcb1dc443aa7812eb288eab08a (task_runner.py:340)
2025-06-14 17:54:25,287 | [92mINFO[0m: [92mtask submitted: id=48bf55bcb1dc443aa7812eb288eab08a, 48bf55bcb1dc443aa7812eb288eab08a, case number: 1[0m (interface.py:242) (1596186)
2025-06-14 17:54:26,000 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:54:25.038896'}, drop_old=False[0m (interface.py:172) (1596220)
2025-06-14 17:54:26,000 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (1596220)
2025-06-14 17:54:26,133 | [92mINFO[0m: [92mSearch config: {'ef': 38}[0m (lancedb.py:38) (1596220)
2025-06-14 17:54:29,090 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (1596220)
2025-06-14 17:54:29,270 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (1596220)
2025-06-14 17:54:29,349 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (1596220)
2025-06-14 17:54:30,151 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (1596220)
2025-06-14 17:54:34,224 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (1596220)
2025-06-14 17:55:08,758 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=34.5199s, count=617, qps in this process: 17.8737[0m (mp_runner.py:91) (1596387)
2025-06-14 17:55:09,190 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=34.9517s, count=608, qps in this process: 17.3954[0m (mp_runner.py:91) (1596388)
2025-06-14 17:55:09,302 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=35.0675s, count=600, qps in this process: 17.1099[0m (mp_runner.py:91) (1596383)
2025-06-14 17:55:09,464 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=35.2265s, count=612, qps in this process: 17.3733[0m (mp_runner.py:91) (1596386)
2025-06-14 17:55:09,470 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=35.245232526998734s, total_count=2437, qps=69.1441[0m (mp_runner.py:139) (1596220)
2025-06-14 17:55:10,348 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=69.1441[0m (mp_runner.py:143) (1596220)
2025-06-14 17:55:10,349 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=69.1441, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[69.1441], conc_latency_p99_list=[np.float64(0.023298591959755865)], conc_latency_avg_list=[np.float64(0.049254984375527985)])[0m (task_runner.py:186) (1596220)
2025-06-14 17:55:10,349 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:54:25.038896'}, result=Metric(max_load_count=0, load_duration=0.0, qps=69.1441, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[69.1441], conc_latency_p99_list=[np.float64(0.023298591959755865)], conc_latency_avg_list=[np.float64(0.049254984375527985)]), label=ResultLabel.NORMAL[0m (interface.py:174) (1596220)
2025-06-14 17:55:10,349 | INFO |Task summary: run_id=48bf5, task_label=48bf55bcb1dc443aa7812eb288eab08a (models.py:375)
2025-06-14 17:55:10,350 | INFO |DB      | db_label                      case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 17:55:10,350 | INFO |------- | ----------------------------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 17:55:10,350 | INFO |LanceDB | 2025-06-14T17:54:25.038896    Performance1536D5M 48bf55bcb1dc443aa7812eb288eab08a | 0.0         69.1441    0.0             0.0           0              | :)    (models.py:375)
2025-06-14 17:55:10,350 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_48bf55bcb1dc443aa7812eb288eab08a_lancedb.json[0m (models.py:243) (1596220)
2025-06-14 17:55:10,351 | [92mINFO[0m: [92mSuccess to finish task: label=48bf55bcb1dc443aa7812eb288eab08a, run_id=48bf55bcb1dc443aa7812eb288eab08a[0m (interface.py:213) (1596220)

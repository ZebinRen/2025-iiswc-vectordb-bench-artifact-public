2025-06-14 17:56:00,499 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T17:56:00.457100', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-5m', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=38), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_concurrent'])
[0m (cli.py:516) (1597753)
2025-06-14 17:56:00,499 | [92mINFO[0m: [92mgenerated uuid for the tasks: 3e8cfae7f9c3459486475985dc976c7c[0m (interface.py:72) (1597753)
2025-06-14 17:56:00,702 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 17:56:00,702 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 17:56:00,703 | INFO | LanceDB-2025-06-14T17:56:00.457100 | Performance  OpenAI-LARGE-5M         None | 3e8cfae7f9c3459486475985dc976c7c (task_runner.py:340)
2025-06-14 17:56:00,703 | [92mINFO[0m: [92mtask submitted: id=3e8cfae7f9c3459486475985dc976c7c, 3e8cfae7f9c3459486475985dc976c7c, case number: 1[0m (interface.py:242) (1597753)
2025-06-14 17:56:01,417 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:56:00.457100'}, drop_old=False[0m (interface.py:172) (1597790)
2025-06-14 17:56:01,417 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (1597790)
2025-06-14 17:56:01,551 | [92mINFO[0m: [92mSearch config: {'ef': 38}[0m (lancedb.py:38) (1597790)
2025-06-14 17:56:04,539 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (1597790)
2025-06-14 17:56:04,717 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (1597790)
2025-06-14 17:56:04,775 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (1597790)
2025-06-14 17:56:05,582 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (1597790)
2025-06-14 17:56:09,657 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (1597790)
2025-06-14 17:56:44,062 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=34.3933s, count=612, qps in this process: 17.7942[0m (mp_runner.py:91) (1597956)
2025-06-14 17:56:44,252 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=34.5833s, count=617, qps in this process: 17.841[0m (mp_runner.py:91) (1597957)
2025-06-14 17:56:44,679 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=35.0095s, count=607, qps in this process: 17.3382[0m (mp_runner.py:91) (1597958)
2025-06-14 17:56:44,760 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=35.0901s, count=620, qps in this process: 17.6688[0m (mp_runner.py:91) (1597953)
2025-06-14 17:56:44,765 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=35.10748675398645s, total_count=2456, qps=69.9566[0m (mp_runner.py:139) (1597790)
2025-06-14 17:56:45,893 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=69.9566[0m (mp_runner.py:143) (1597790)
2025-06-14 17:56:45,893 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=69.9566, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[69.9566], conc_latency_p99_list=[np.float64(0.0229665156592091)], conc_latency_avg_list=[np.float64(0.04886302343177197)])[0m (task_runner.py:186) (1597790)
2025-06-14 17:56:45,894 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:56:00.457100'}, result=Metric(max_load_count=0, load_duration=0.0, qps=69.9566, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[69.9566], conc_latency_p99_list=[np.float64(0.0229665156592091)], conc_latency_avg_list=[np.float64(0.04886302343177197)]), label=ResultLabel.NORMAL[0m (interface.py:174) (1597790)
2025-06-14 17:56:45,894 | INFO |Task summary: run_id=3e8cf, task_label=3e8cfae7f9c3459486475985dc976c7c (models.py:375)
2025-06-14 17:56:45,894 | INFO |DB      | db_label                      case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 17:56:45,894 | INFO |------- | ----------------------------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 17:56:45,894 | INFO |LanceDB | 2025-06-14T17:56:00.457100    Performance1536D5M 3e8cfae7f9c3459486475985dc976c7c | 0.0         69.9566    0.0             0.0           0              | :)    (models.py:375)
2025-06-14 17:56:45,895 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_3e8cfae7f9c3459486475985dc976c7c_lancedb.json[0m (models.py:243) (1597790)
2025-06-14 17:56:45,895 | [92mINFO[0m: [92mSuccess to finish task: label=3e8cfae7f9c3459486475985dc976c7c, run_id=3e8cfae7f9c3459486475985dc976c7c[0m (interface.py:213) (1597790)

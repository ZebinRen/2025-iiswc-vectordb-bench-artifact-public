2025-06-14 17:55:12,761 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T17:55:12.715348', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-5m', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=38), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_concurrent'])
[0m (cli.py:516) (1596958)
2025-06-14 17:55:12,761 | [92mINFO[0m: [92mgenerated uuid for the tasks: 8634a1061e58474a9425f40bbca4d257[0m (interface.py:72) (1596958)
2025-06-14 17:55:12,980 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 17:55:12,980 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 17:55:12,981 | INFO | LanceDB-2025-06-14T17:55:12.715348 | Performance  OpenAI-LARGE-5M         None | 8634a1061e58474a9425f40bbca4d257 (task_runner.py:340)
2025-06-14 17:55:12,981 | [92mINFO[0m: [92mtask submitted: id=8634a1061e58474a9425f40bbca4d257, 8634a1061e58474a9425f40bbca4d257, case number: 1[0m (interface.py:242) (1596958)
2025-06-14 17:55:13,700 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:55:12.715348'}, drop_old=False[0m (interface.py:172) (1596994)
2025-06-14 17:55:13,701 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (1596994)
2025-06-14 17:55:13,836 | [92mINFO[0m: [92mSearch config: {'ef': 38}[0m (lancedb.py:38) (1596994)
2025-06-14 17:55:16,810 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (1596994)
2025-06-14 17:55:16,982 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (1596994)
2025-06-14 17:55:17,061 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (1596994)
2025-06-14 17:55:17,873 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (1596994)
2025-06-14 17:55:21,948 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (1596994)
2025-06-14 17:55:57,031 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=35.0702s, count=637, qps in this process: 18.1636[0m (mp_runner.py:91) (1597162)
2025-06-14 17:55:57,113 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=35.153s, count=605, qps in this process: 17.2105[0m (mp_runner.py:91) (1597161)
2025-06-14 17:55:57,169 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=35.2091s, count=614, qps in this process: 17.4387[0m (mp_runner.py:91) (1597160)
2025-06-14 17:55:57,193 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=35.2325s, count=643, qps in this process: 18.2502[0m (mp_runner.py:91) (1597157)
2025-06-14 17:55:57,199 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=35.25042479900003s, total_count=2499, qps=70.8928[0m (mp_runner.py:139) (1596994)
2025-06-14 17:55:58,065 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=70.8928[0m (mp_runner.py:143) (1596994)
2025-06-14 17:55:58,066 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=70.8928, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[70.8928], conc_latency_p99_list=[np.float64(0.023603279603412373)], conc_latency_avg_list=[np.float64(0.04801831372553694)])[0m (task_runner.py:186) (1596994)
2025-06-14 17:55:58,066 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:55:12.715348'}, result=Metric(max_load_count=0, load_duration=0.0, qps=70.8928, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[70.8928], conc_latency_p99_list=[np.float64(0.023603279603412373)], conc_latency_avg_list=[np.float64(0.04801831372553694)]), label=ResultLabel.NORMAL[0m (interface.py:174) (1596994)
2025-06-14 17:55:58,066 | INFO |Task summary: run_id=8634a, task_label=8634a1061e58474a9425f40bbca4d257 (models.py:375)
2025-06-14 17:55:58,066 | INFO |DB      | db_label                      case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 17:55:58,067 | INFO |------- | ----------------------------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 17:55:58,067 | INFO |LanceDB | 2025-06-14T17:55:12.715348    Performance1536D5M 8634a1061e58474a9425f40bbca4d257 | 0.0         70.8928    0.0             0.0           0              | :)    (models.py:375)
2025-06-14 17:55:58,067 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_8634a1061e58474a9425f40bbca4d257_lancedb.json[0m (models.py:243) (1596994)
2025-06-14 17:55:58,068 | [92mINFO[0m: [92mSuccess to finish task: label=8634a1061e58474a9425f40bbca4d257, run_id=8634a1061e58474a9425f40bbca4d257[0m (interface.py:213) (1596994)

2025-06-14 17:53:37,365 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T17:53:37.318555', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-hnsw-openai-5m', token=None), db_case_config=LanceDBHNSWIndexConfig(index=<IndexType.HNSW: 'HNSW'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=0, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=0, m=16, ef_construction=200, ef=38), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_concurrent'])
[0m (cli.py:516) (1595396)
2025-06-14 17:53:37,365 | [92mINFO[0m: [92mgenerated uuid for the tasks: 697ff96e3deb439a8ac342bd4f0fd553[0m (interface.py:72) (1595396)
2025-06-14 17:53:37,584 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 17:53:37,584 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 17:53:37,584 | INFO | LanceDB-2025-06-14T17:53:37.318555 | Performance  OpenAI-LARGE-5M         None | 697ff96e3deb439a8ac342bd4f0fd553 (task_runner.py:340)
2025-06-14 17:53:37,584 | [92mINFO[0m: [92mtask submitted: id=697ff96e3deb439a8ac342bd4f0fd553, 697ff96e3deb439a8ac342bd4f0fd553, case number: 1[0m (interface.py:242) (1595396)
2025-06-14 17:53:38,301 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:53:37.318555'}, drop_old=False[0m (interface.py:172) (1595431)
2025-06-14 17:53:38,301 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (1595431)
2025-06-14 17:53:38,436 | [92mINFO[0m: [92mSearch config: {'ef': 38}[0m (lancedb.py:38) (1595431)
2025-06-14 17:53:41,382 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (1595431)
2025-06-14 17:53:41,575 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (1595431)
2025-06-14 17:53:41,654 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (1595431)
2025-06-14 17:53:42,445 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (1595431)
2025-06-14 17:53:46,518 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (1595431)
2025-06-14 17:54:19,926 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=33.3942s, count=648, qps in this process: 19.4046[0m (mp_runner.py:91) (1595618)
2025-06-14 17:54:21,357 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=34.8245s, count=635, qps in this process: 18.2343[0m (mp_runner.py:91) (1595616)
2025-06-14 17:54:21,728 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=35.1983s, count=634, qps in this process: 18.0122[0m (mp_runner.py:91) (1595613)
2025-06-14 17:54:21,828 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=35.2969s, count=657, qps in this process: 18.6135[0m (mp_runner.py:91) (1595617)
2025-06-14 17:54:21,834 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=35.31474640600209s, total_count=2574, qps=72.8874[0m (mp_runner.py:139) (1595431)
2025-06-14 17:54:22,665 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=72.8874[0m (mp_runner.py:143) (1595431)
2025-06-14 17:54:22,665 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=72.8874, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[72.8874], conc_latency_p99_list=[np.float64(0.023346400028676727)], conc_latency_avg_list=[np.float64(0.04661800611229311)])[0m (task_runner.py:186) (1595431)
2025-06-14 17:54:22,665 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T17:53:37.318555'}, result=Metric(max_load_count=0, load_duration=0.0, qps=72.8874, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[72.8874], conc_latency_p99_list=[np.float64(0.023346400028676727)], conc_latency_avg_list=[np.float64(0.04661800611229311)]), label=ResultLabel.NORMAL[0m (interface.py:174) (1595431)
2025-06-14 17:54:22,666 | INFO |Task summary: run_id=697ff, task_label=697ff96e3deb439a8ac342bd4f0fd553 (models.py:375)
2025-06-14 17:54:22,666 | INFO |DB      | db_label                      case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 17:54:22,666 | INFO |------- | ----------------------------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 17:54:22,666 | INFO |LanceDB | 2025-06-14T17:53:37.318555    Performance1536D5M 697ff96e3deb439a8ac342bd4f0fd553 | 0.0         72.8874    0.0             0.0           0              | :)    (models.py:375)
2025-06-14 17:54:22,666 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_697ff96e3deb439a8ac342bd4f0fd553_lancedb.json[0m (models.py:243) (1595431)
2025-06-14 17:54:22,668 | [92mINFO[0m: [92mSuccess to finish task: label=697ff96e3deb439a8ac342bd4f0fd553, run_id=697ff96e3deb439a8ac342bd4f0fd553[0m (interface.py:213) (1595431)

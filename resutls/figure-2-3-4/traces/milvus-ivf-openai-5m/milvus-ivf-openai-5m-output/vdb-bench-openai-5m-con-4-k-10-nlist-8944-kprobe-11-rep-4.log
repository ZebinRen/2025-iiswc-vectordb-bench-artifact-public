2025-06-08 17:36:44,217 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.Milvus: 'Milvus'>, db_config=MilvusConfig(db_label='milvus_ivf_openai_5m', version='', note='', uri=SecretStr('**********'), user=None, password=SecretStr(''), num_shards=1), db_case_config=IVFFlatConfig(index=<IndexType.IVFFlat: 'IVF_FLAT'>, metric_type=None, nlist=8944, nprobe=11), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (704345)
2025-06-08 17:36:44,218 | [92mINFO[0m: [92mgenerated uuid for the tasks: da6faac67cb04138b85ca4f3b2fdb3c4[0m (interface.py:72) (704345)
2025-06-08 17:36:44,345 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-08 17:36:44,346 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-08 17:36:44,346 | INFO | Milvus-milvus_ivf_openai_5m | Performance  OpenAI-LARGE-5M         None | da6faac67cb04138b85ca4f3b2fdb3c4 (task_runner.py:340)
2025-06-08 17:36:44,346 | [92mINFO[0m: [92mtask submitted: id=da6faac67cb04138b85ca4f3b2fdb3c4, da6faac67cb04138b85ca4f3b2fdb3c4, case number: 1[0m (interface.py:242) (704345)
2025-06-08 17:36:45,026 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'Milvus-milvus_ivf_openai_5m'}, drop_old=False[0m (interface.py:172) (704381)
2025-06-08 17:36:45,026 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (704381)
2025-06-08 17:36:48,081 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (704381)
2025-06-08 17:36:48,236 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (704381)
2025-06-08 17:36:48,317 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (704381)
2025-06-08 17:36:49,105 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (704381)
2025-06-08 17:36:53,178 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (704381)
2025-06-08 17:37:23,202 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.0037s, count=1548, qps in this process: 51.5936[0m (mp_runner.py:91) (704542)
2025-06-08 17:37:23,205 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.0065s, count=1547, qps in this process: 51.5555[0m (mp_runner.py:91) (704539)
2025-06-08 17:37:23,207 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=30.0068s, count=1542, qps in this process: 51.3884[0m (mp_runner.py:91) (704550)
2025-06-08 17:37:23,217 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=30.0183s, count=1559, qps in this process: 51.935[0m (mp_runner.py:91) (704551)
2025-06-08 17:37:23,221 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=30.04239118699843s, total_count=6196, qps=206.2419[0m (mp_runner.py:139) (704381)
2025-06-08 17:37:23,559 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=206.2419[0m (mp_runner.py:143) (704381)
2025-06-08 17:37:24,435 | [92mINFO[0m: [92mSpawnProcess-1:6 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (705094)
2025-06-08 17:37:33,793 | [92mINFO[0m: [92mSpawnProcess-1:6 search entire test_data: cost=7.8313s, queries=1000, avg_recall=0.904, avg_ndcg=0.9079,avg_latency=0.0078, p99=0.0089[0m (serial_runner.py:251) (705094)
2025-06-08 17:37:33,947 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=206.2419, serial_latency_p99=np.float64(0.0089), recall=np.float64(0.904), ndcg=np.float64(0.9079), conc_num_list=[4], conc_qps_list=[206.2419], conc_latency_p99_list=[np.float64(0.027850619001765158)], conc_latency_avg_list=[np.float64(0.019363554761126073)])[0m (task_runner.py:186) (704381)
2025-06-08 17:37:33,947 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'Milvus-milvus_ivf_openai_5m'}, result=Metric(max_load_count=0, load_duration=0.0, qps=206.2419, serial_latency_p99=np.float64(0.0089), recall=np.float64(0.904), ndcg=np.float64(0.9079), conc_num_list=[4], conc_qps_list=[206.2419], conc_latency_p99_list=[np.float64(0.027850619001765158)], conc_latency_avg_list=[np.float64(0.019363554761126073)]), label=ResultLabel.NORMAL[0m (interface.py:174) (704381)
2025-06-08 17:37:33,947 | INFO |Task summary: run_id=da6fa, task_label=da6faac67cb04138b85ca4f3b2fdb3c4 (models.py:375)
2025-06-08 17:37:33,947 | INFO |DB     | db_label                case               label                            | load_dur    qps         latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-08 17:37:33,947 | INFO |------ | ----------------------- ------------------ -------------------------------- | ----------- ----------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-08 17:37:33,947 | INFO |Milvus | milvus_ivf_openai_5m    Performance1536D5M da6faac67cb04138b85ca4f3b2fdb3c4 | 0.0         206.2419    0.0089          0.904         0              | :)    (models.py:375)
2025-06-08 17:37:33,948 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/Milvus/result_20250608_da6faac67cb04138b85ca4f3b2fdb3c4_milvus.json[0m (models.py:243) (704381)
2025-06-08 17:37:33,948 | [92mINFO[0m: [92mSuccess to finish task: label=da6faac67cb04138b85ca4f3b2fdb3c4, run_id=da6faac67cb04138b85ca4f3b2fdb3c4[0m (interface.py:213) (704381)

2025-06-08 17:30:51,132 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.Milvus: 'Milvus'>, db_config=MilvusConfig(db_label='milvus_ivf_openai_5m', version='', note='', uri=SecretStr('**********'), user=None, password=SecretStr(''), num_shards=1), db_case_config=IVFFlatConfig(index=<IndexType.IVFFlat: 'IVF_FLAT'>, metric_type=None, nlist=8944, nprobe=11), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[2], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (698186)
2025-06-08 17:30:51,132 | [92mINFO[0m: [92mgenerated uuid for the tasks: 10b5dcf9ce2542b3abb52d5c1c96871e[0m (interface.py:72) (698186)
2025-06-08 17:30:51,260 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-08 17:30:51,260 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-08 17:30:51,261 | INFO | Milvus-milvus_ivf_openai_5m | Performance  OpenAI-LARGE-5M         None | 10b5dcf9ce2542b3abb52d5c1c96871e (task_runner.py:340)
2025-06-08 17:30:51,261 | [92mINFO[0m: [92mtask submitted: id=10b5dcf9ce2542b3abb52d5c1c96871e, 10b5dcf9ce2542b3abb52d5c1c96871e, case number: 1[0m (interface.py:242) (698186)
2025-06-08 17:30:51,939 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'Milvus-milvus_ivf_openai_5m'}, drop_old=False[0m (interface.py:172) (698220)
2025-06-08 17:30:51,939 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (698220)
2025-06-08 17:30:55,019 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (698220)
2025-06-08 17:30:55,161 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (698220)
2025-06-08 17:30:55,217 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (698220)
2025-06-08 17:30:56,012 | [92mINFO[0m: [92mStart search 30s in concurrency 2, filters: None[0m (mp_runner.py:118) (698220)
2025-06-08 17:30:58,083 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=2[0m (mp_runner.py:125) (698220)
2025-06-08 17:31:28,110 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.0051s, count=2586, qps in this process: 86.1853[0m (mp_runner.py:91) (698381)
2025-06-08 17:31:28,122 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.0174s, count=2574, qps in this process: 85.7503[0m (mp_runner.py:91) (698378)
2025-06-08 17:31:28,126 | [92mINFO[0m: [92mEnd search in concurrency 2: dur=30.042361019000964s, total_count=5160, qps=171.7575[0m (mp_runner.py:139) (698220)
2025-06-08 17:31:28,459 | [92mINFO[0m: [92mUpdate largest qps with concurrency 2: current max_qps=171.7575[0m (mp_runner.py:143) (698220)
2025-06-08 17:31:29,340 | [92mINFO[0m: [92mSpawnProcess-1:4 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (698798)
2025-06-08 17:31:38,659 | [92mINFO[0m: [92mSpawnProcess-1:4 search entire test_data: cost=7.8188s, queries=1000, avg_recall=0.904, avg_ndcg=0.9079,avg_latency=0.0078, p99=0.0088[0m (serial_runner.py:251) (698798)
2025-06-08 17:31:38,813 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=171.7575, serial_latency_p99=np.float64(0.0088), recall=np.float64(0.904), ndcg=np.float64(0.9079), conc_num_list=[2], conc_qps_list=[171.7575], conc_latency_p99_list=[np.float64(0.015754266052063027)], conc_latency_avg_list=[np.float64(0.011623091521129069)])[0m (task_runner.py:186) (698220)
2025-06-08 17:31:38,813 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'Milvus-milvus_ivf_openai_5m'}, result=Metric(max_load_count=0, load_duration=0.0, qps=171.7575, serial_latency_p99=np.float64(0.0088), recall=np.float64(0.904), ndcg=np.float64(0.9079), conc_num_list=[2], conc_qps_list=[171.7575], conc_latency_p99_list=[np.float64(0.015754266052063027)], conc_latency_avg_list=[np.float64(0.011623091521129069)]), label=ResultLabel.NORMAL[0m (interface.py:174) (698220)
2025-06-08 17:31:38,814 | INFO |Task summary: run_id=10b5d, task_label=10b5dcf9ce2542b3abb52d5c1c96871e (models.py:375)
2025-06-08 17:31:38,814 | INFO |DB     | db_label                case               label                            | load_dur    qps         latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-08 17:31:38,814 | INFO |------ | ----------------------- ------------------ -------------------------------- | ----------- ----------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-08 17:31:38,814 | INFO |Milvus | milvus_ivf_openai_5m    Performance1536D5M 10b5dcf9ce2542b3abb52d5c1c96871e | 0.0         171.7575    0.0088          0.904         0              | :)    (models.py:375)
2025-06-08 17:31:38,814 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/Milvus/result_20250608_10b5dcf9ce2542b3abb52d5c1c96871e_milvus.json[0m (models.py:243) (698220)
2025-06-08 17:31:38,815 | [92mINFO[0m: [92mSuccess to finish task: label=10b5dcf9ce2542b3abb52d5c1c96871e, run_id=10b5dcf9ce2542b3abb52d5c1c96871e[0m (interface.py:213) (698220)

2025-06-12 14:33:13,908 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.QdrantLocal: 'QdrantLocal'>, db_config=QdrantLocalConfig(db_label='', version='', note='', url=SecretStr('**********')), db_case_config=QdrantLocalIndexConfig(metric_type=None, m=16, ef_construct=200, hnsw_ef=27, on_disk=False), case_config=CaseConfig(case_id=<CaseType.Performance768D1M: 5>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[2], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (3881241)
2025-06-12 14:33:13,909 | [92mINFO[0m: [92mgenerated uuid for the tasks: baa4a339d2e44569a7f729930483356f[0m (interface.py:72) (3881241)
2025-06-12 14:33:14,471 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-12 14:33:14,471 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-12 14:33:14,471 | INFO | QdrantLocal    | Performance  Cohere-MEDIUM-1M        None | baa4a339d2e44569a7f729930483356f (task_runner.py:340)
2025-06-12 14:33:14,472 | [92mINFO[0m: [92mtask submitted: id=baa4a339d2e44569a7f729930483356f, baa4a339d2e44569a7f729930483356f, case number: 1[0m (interface.py:242) (3881241)
2025-06-12 14:33:15,197 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'Cohere', 'size': 1000000, 'dim': 768, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'QdrantLocal'}, drop_old=False[0m (interface.py:172) (3881307)
2025-06-12 14:33:15,197 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (3881307)
2025-06-12 14:33:15,809 | [92mINFO[0m: [92mCase config: {'distance': 'Cosine', 'm': 16, 'ef_construct': 200, 'on_disk': False}[0m (qdrant_local.py:66) (3881307)
2025-06-12 14:33:15,809 | [92mINFO[0m: [92mSearch parameter: {'exact': False, 'hnsw_ef': 27}[0m (qdrant_local.py:67) (3881307)
2025-06-12 14:33:17,222 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (3881307)
2025-06-12 14:33:17,336 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (3881307)
2025-06-12 14:33:17,417 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (3881307)
2025-06-12 14:33:18,234 | [92mINFO[0m: [92mStart search 30s in concurrency 2, filters: None[0m (mp_runner.py:118) (3881307)
2025-06-12 14:33:20,275 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=2[0m (mp_runner.py:125) (3881307)
2025-06-12 14:33:50,422 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.0116s, count=2745, qps in this process: 91.4646[0m (mp_runner.py:91) (3881518)
2025-06-12 14:33:50,426 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.0142s, count=2735, qps in this process: 91.1235[0m (mp_runner.py:91) (3881521)
2025-06-12 14:33:50,434 | [92mINFO[0m: [92mEnd search in concurrency 2: dur=30.158284121993347s, total_count=5480, qps=181.708[0m (mp_runner.py:139) (3881307)
2025-06-12 14:33:50,880 | [92mINFO[0m: [92mUpdate largest qps with concurrency 2: current max_qps=181.708[0m (mp_runner.py:143) (3881307)
2025-06-12 14:33:52,140 | [92mINFO[0m: [92mSpawnProcess-1:4 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (3882311)
2025-06-12 14:34:08,743 | [92mINFO[0m: [92mSpawnProcess-1:4 search entire test_data: cost=10.8102s, queries=1000, avg_recall=0.9117, avg_ndcg=0.9109,avg_latency=0.0108, p99=0.0121[0m (serial_runner.py:251) (3882311)
2025-06-12 14:34:09,021 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=181.708, serial_latency_p99=np.float64(0.0121), recall=np.float64(0.9117), ndcg=np.float64(0.9109), conc_num_list=[2], conc_qps_list=[181.708], conc_latency_p99_list=[np.float64(0.012189449289289769)], conc_latency_avg_list=[np.float64(0.010942894167747531)])[0m (task_runner.py:186) (3881307)
2025-06-12 14:34:09,022 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'Cohere', 'size': 1000000, 'dim': 768, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'QdrantLocal'}, result=Metric(max_load_count=0, load_duration=0.0, qps=181.708, serial_latency_p99=np.float64(0.0121), recall=np.float64(0.9117), ndcg=np.float64(0.9109), conc_num_list=[2], conc_qps_list=[181.708], conc_latency_p99_list=[np.float64(0.012189449289289769)], conc_latency_avg_list=[np.float64(0.010942894167747531)]), label=ResultLabel.NORMAL[0m (interface.py:174) (3881307)
2025-06-12 14:34:09,023 | INFO |Task summary: run_id=baa4a, task_label=baa4a339d2e44569a7f729930483356f (models.py:375)
2025-06-12 14:34:09,023 | INFO |DB          | db_label case              label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-12 14:34:09,023 | INFO |----------- | -------- ----------------- -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-12 14:34:09,023 | INFO |QdrantLocal |          Performance768D1M baa4a339d2e44569a7f729930483356f | 0.0         181.708    0.0121          0.9117        0              | :)    (models.py:375)
2025-06-12 14:34:09,024 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/QdrantLocal/result_20250612_baa4a339d2e44569a7f729930483356f_qdrantlocal.json[0m (models.py:243) (3881307)
2025-06-12 14:34:09,025 | [92mINFO[0m: [92mSuccess to finish task: label=baa4a339d2e44569a7f729930483356f, run_id=baa4a339d2e44569a7f729930483356f[0m (interface.py:213) (3881307)

2025-06-12 14:32:17,451 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.QdrantLocal: 'QdrantLocal'>, db_config=QdrantLocalConfig(db_label='', version='', note='', url=SecretStr('**********')), db_case_config=QdrantLocalIndexConfig(metric_type=None, m=16, ef_construct=200, hnsw_ef=27, on_disk=False), case_config=CaseConfig(case_id=<CaseType.Performance768D1M: 5>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[2], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (3879672)
2025-06-12 14:32:17,452 | [92mINFO[0m: [92mgenerated uuid for the tasks: 62b9572a7e9d4f33a4e81cf25f0733af[0m (interface.py:72) (3879672)
2025-06-12 14:32:18,007 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-12 14:32:18,007 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-12 14:32:18,007 | INFO | QdrantLocal    | Performance  Cohere-MEDIUM-1M        None | 62b9572a7e9d4f33a4e81cf25f0733af (task_runner.py:340)
2025-06-12 14:32:18,007 | [92mINFO[0m: [92mtask submitted: id=62b9572a7e9d4f33a4e81cf25f0733af, 62b9572a7e9d4f33a4e81cf25f0733af, case number: 1[0m (interface.py:242) (3879672)
2025-06-12 14:32:18,728 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'Cohere', 'size': 1000000, 'dim': 768, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'QdrantLocal'}, drop_old=False[0m (interface.py:172) (3879731)
2025-06-12 14:32:18,728 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (3879731)
2025-06-12 14:32:19,337 | [92mINFO[0m: [92mCase config: {'distance': 'Cosine', 'm': 16, 'ef_construct': 200, 'on_disk': False}[0m (qdrant_local.py:66) (3879731)
2025-06-12 14:32:19,337 | [92mINFO[0m: [92mSearch parameter: {'exact': False, 'hnsw_ef': 27}[0m (qdrant_local.py:67) (3879731)
2025-06-12 14:32:20,783 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (3879731)
2025-06-12 14:32:20,901 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (3879731)
2025-06-12 14:32:20,990 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (3879731)
2025-06-12 14:32:21,775 | [92mINFO[0m: [92mStart search 30s in concurrency 2, filters: None[0m (mp_runner.py:118) (3879731)
2025-06-12 14:32:23,817 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=2[0m (mp_runner.py:125) (3879731)
2025-06-12 14:32:53,970 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.0148s, count=2732, qps in this process: 91.0218[0m (mp_runner.py:91) (3879949)
2025-06-12 14:32:53,982 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.0141s, count=2780, qps in this process: 92.6231[0m (mp_runner.py:91) (3879952)
2025-06-12 14:32:53,989 | [92mINFO[0m: [92mEnd search in concurrency 2: dur=30.171434356001555s, total_count=5512, qps=182.6894[0m (mp_runner.py:139) (3879731)
2025-06-12 14:32:54,473 | [92mINFO[0m: [92mUpdate largest qps with concurrency 2: current max_qps=182.6894[0m (mp_runner.py:143) (3879731)
2025-06-12 14:32:55,736 | [92mINFO[0m: [92mSpawnProcess-1:4 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (3880769)
2025-06-12 14:33:11,523 | [92mINFO[0m: [92mSpawnProcess-1:4 search entire test_data: cost=10.5559s, queries=1000, avg_recall=0.9117, avg_ndcg=0.9109,avg_latency=0.0106, p99=0.0121[0m (serial_runner.py:251) (3880769)
2025-06-12 14:33:11,787 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=182.6894, serial_latency_p99=np.float64(0.0121), recall=np.float64(0.9117), ndcg=np.float64(0.9109), conc_num_list=[2], conc_qps_list=[182.6894], conc_latency_p99_list=[np.float64(0.012361307338287589)], conc_latency_avg_list=[np.float64(0.01088023670580154)])[0m (task_runner.py:186) (3879731)
2025-06-12 14:33:11,788 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'Cohere', 'size': 1000000, 'dim': 768, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'QdrantLocal'}, result=Metric(max_load_count=0, load_duration=0.0, qps=182.6894, serial_latency_p99=np.float64(0.0121), recall=np.float64(0.9117), ndcg=np.float64(0.9109), conc_num_list=[2], conc_qps_list=[182.6894], conc_latency_p99_list=[np.float64(0.012361307338287589)], conc_latency_avg_list=[np.float64(0.01088023670580154)]), label=ResultLabel.NORMAL[0m (interface.py:174) (3879731)
2025-06-12 14:33:11,788 | INFO |Task summary: run_id=62b95, task_label=62b9572a7e9d4f33a4e81cf25f0733af (models.py:375)
2025-06-12 14:33:11,788 | INFO |DB          | db_label case              label                            | load_dur    qps         latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-12 14:33:11,788 | INFO |----------- | -------- ----------------- -------------------------------- | ----------- ----------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-12 14:33:11,788 | INFO |QdrantLocal |          Performance768D1M 62b9572a7e9d4f33a4e81cf25f0733af | 0.0         182.6894    0.0121          0.9117        0              | :)    (models.py:375)
2025-06-12 14:33:11,789 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/QdrantLocal/result_20250612_62b9572a7e9d4f33a4e81cf25f0733af_qdrantlocal.json[0m (models.py:243) (3879731)
2025-06-12 14:33:11,790 | [92mINFO[0m: [92mSuccess to finish task: label=62b9572a7e9d4f33a4e81cf25f0733af, run_id=62b9572a7e9d4f33a4e81cf25f0733af[0m (interface.py:213) (3879731)

2025-06-12 14:26:46,416 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.QdrantLocal: 'QdrantLocal'>, db_config=QdrantLocalConfig(db_label='', version='', note='', url=SecretStr('**********')), db_case_config=QdrantLocalIndexConfig(metric_type=None, m=16, ef_construct=200, hnsw_ef=27, on_disk=False), case_config=CaseConfig(case_id=<CaseType.Performance768D1M: 5>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[1], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (3870553)
2025-06-12 14:26:46,416 | [92mINFO[0m: [92mgenerated uuid for the tasks: b8bef2b9f4554af9b82a587abb6d5528[0m (interface.py:72) (3870553)
2025-06-12 14:26:46,954 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-12 14:26:46,954 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-12 14:26:46,954 | INFO | QdrantLocal    | Performance  Cohere-MEDIUM-1M        None | b8bef2b9f4554af9b82a587abb6d5528 (task_runner.py:340)
2025-06-12 14:26:46,955 | [92mINFO[0m: [92mtask submitted: id=b8bef2b9f4554af9b82a587abb6d5528, b8bef2b9f4554af9b82a587abb6d5528, case number: 1[0m (interface.py:242) (3870553)
2025-06-12 14:26:47,687 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'Cohere', 'size': 1000000, 'dim': 768, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'QdrantLocal'}, drop_old=False[0m (interface.py:172) (3870618)
2025-06-12 14:26:47,687 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (3870618)
2025-06-12 14:26:48,306 | [92mINFO[0m: [92mCase config: {'distance': 'Cosine', 'm': 16, 'ef_construct': 200, 'on_disk': False}[0m (qdrant_local.py:66) (3870618)
2025-06-12 14:26:48,306 | [92mINFO[0m: [92mSearch parameter: {'exact': False, 'hnsw_ef': 27}[0m (qdrant_local.py:67) (3870618)
2025-06-12 14:26:49,700 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (3870618)
2025-06-12 14:26:49,804 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (3870618)
2025-06-12 14:26:49,883 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (3870618)
2025-06-12 14:26:50,687 | [92mINFO[0m: [92mStart search 30s in concurrency 1, filters: None[0m (mp_runner.py:118) (3870618)
2025-06-12 14:26:52,726 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=1[0m (mp_runner.py:125) (3870618)
2025-06-12 14:27:22,874 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.0136s, count=2707, qps in this process: 90.1924[0m (mp_runner.py:91) (3870815)
2025-06-12 14:27:22,883 | [92mINFO[0m: [92mEnd search in concurrency 1: dur=30.155288038004073s, total_count=2707, qps=89.7687[0m (mp_runner.py:139) (3870618)
2025-06-12 14:27:23,357 | [92mINFO[0m: [92mUpdate largest qps with concurrency 1: current max_qps=89.7687[0m (mp_runner.py:143) (3870618)
2025-06-12 14:27:24,607 | [92mINFO[0m: [92mSpawnProcess-1:3 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (3871564)
2025-06-12 14:27:33,837 | [92mINFO[0m: [92mSpawnProcess-1:3 search entire test_data: cost=6.7316s, queries=1000, avg_recall=0.9117, avg_ndcg=0.9109,avg_latency=0.0067, p99=0.012[0m (serial_runner.py:251) (3871564)
2025-06-12 14:27:34,101 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=89.7687, serial_latency_p99=np.float64(0.012), recall=np.float64(0.9117), ndcg=np.float64(0.9109), conc_num_list=[1], conc_qps_list=[89.7687], conc_latency_p99_list=[np.float64(0.012321483400010038)], conc_latency_avg_list=[np.float64(0.011076887285389619)])[0m (task_runner.py:186) (3870618)
2025-06-12 14:27:34,102 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'Cohere', 'size': 1000000, 'dim': 768, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'QdrantLocal'}, result=Metric(max_load_count=0, load_duration=0.0, qps=89.7687, serial_latency_p99=np.float64(0.012), recall=np.float64(0.9117), ndcg=np.float64(0.9109), conc_num_list=[1], conc_qps_list=[89.7687], conc_latency_p99_list=[np.float64(0.012321483400010038)], conc_latency_avg_list=[np.float64(0.011076887285389619)]), label=ResultLabel.NORMAL[0m (interface.py:174) (3870618)
2025-06-12 14:27:34,103 | INFO |Task summary: run_id=b8bef, task_label=b8bef2b9f4554af9b82a587abb6d5528 (models.py:375)
2025-06-12 14:27:34,103 | INFO |DB          | db_label case              label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-12 14:27:34,103 | INFO |----------- | -------- ----------------- -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-12 14:27:34,103 | INFO |QdrantLocal |          Performance768D1M b8bef2b9f4554af9b82a587abb6d5528 | 0.0         89.7687    0.012           0.9117        0              | :)    (models.py:375)
2025-06-12 14:27:34,104 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/QdrantLocal/result_20250612_b8bef2b9f4554af9b82a587abb6d5528_qdrantlocal.json[0m (models.py:243) (3870618)
2025-06-12 14:27:34,105 | [92mINFO[0m: [92mSuccess to finish task: label=b8bef2b9f4554af9b82a587abb6d5528, run_id=b8bef2b9f4554af9b82a587abb6d5528[0m (interface.py:213) (3870618)

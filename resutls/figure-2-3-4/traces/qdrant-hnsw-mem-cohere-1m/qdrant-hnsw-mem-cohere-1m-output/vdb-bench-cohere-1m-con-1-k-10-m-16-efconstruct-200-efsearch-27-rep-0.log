2025-06-12 14:24:54,140 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.QdrantLocal: 'QdrantLocal'>, db_config=QdrantLocalConfig(db_label='', version='', note='', url=SecretStr('**********')), db_case_config=QdrantLocalIndexConfig(metric_type=None, m=16, ef_construct=200, hnsw_ef=27, on_disk=False), case_config=CaseConfig(case_id=<CaseType.Performance768D1M: 5>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[1], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (3867537)
2025-06-12 14:24:54,140 | [92mINFO[0m: [92mgenerated uuid for the tasks: 1a37866cba9b465494bfab707b63a600[0m (interface.py:72) (3867537)
2025-06-12 14:24:54,701 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-12 14:24:54,701 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-12 14:24:54,701 | INFO | QdrantLocal    | Performance  Cohere-MEDIUM-1M        None | 1a37866cba9b465494bfab707b63a600 (task_runner.py:340)
2025-06-12 14:24:54,701 | [92mINFO[0m: [92mtask submitted: id=1a37866cba9b465494bfab707b63a600, 1a37866cba9b465494bfab707b63a600, case number: 1[0m (interface.py:242) (3867537)
2025-06-12 14:24:55,420 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'Cohere', 'size': 1000000, 'dim': 768, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'QdrantLocal'}, drop_old=False[0m (interface.py:172) (3867590)
2025-06-12 14:24:55,420 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (3867590)
2025-06-12 14:24:56,027 | [92mINFO[0m: [92mCase config: {'distance': 'Cosine', 'm': 16, 'ef_construct': 200, 'on_disk': False}[0m (qdrant_local.py:66) (3867590)
2025-06-12 14:24:56,027 | [92mINFO[0m: [92mSearch parameter: {'exact': False, 'hnsw_ef': 27}[0m (qdrant_local.py:67) (3867590)
2025-06-12 14:24:57,432 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (3867590)
2025-06-12 14:24:57,544 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (3867590)
2025-06-12 14:24:57,632 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (3867590)
2025-06-12 14:24:58,402 | [92mINFO[0m: [92mStart search 30s in concurrency 1, filters: None[0m (mp_runner.py:118) (3867590)
2025-06-12 14:25:00,442 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=1[0m (mp_runner.py:125) (3867590)
2025-06-12 14:25:30,593 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.0104s, count=2740, qps in this process: 91.3017[0m (mp_runner.py:91) (3867801)
2025-06-12 14:25:30,600 | [92mINFO[0m: [92mEnd search in concurrency 1: dur=30.156643361988245s, total_count=2740, qps=90.8589[0m (mp_runner.py:139) (3867590)
2025-06-12 14:25:31,052 | [92mINFO[0m: [92mUpdate largest qps with concurrency 1: current max_qps=90.8589[0m (mp_runner.py:143) (3867590)
2025-06-12 14:25:32,272 | [92mINFO[0m: [92mSpawnProcess-1:3 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (3868574)
2025-06-12 14:25:48,579 | [92mINFO[0m: [92mSpawnProcess-1:3 search entire test_data: cost=10.7219s, queries=1000, avg_recall=0.9117, avg_ndcg=0.9109,avg_latency=0.0107, p99=0.0123[0m (serial_runner.py:251) (3868574)
2025-06-12 14:25:48,845 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=90.8589, serial_latency_p99=np.float64(0.0123), recall=np.float64(0.9117), ndcg=np.float64(0.9109), conc_num_list=[1], conc_qps_list=[90.8589], conc_latency_p99_list=[np.float64(0.011907943598198472)], conc_latency_avg_list=[np.float64(0.010942500705224671)])[0m (task_runner.py:186) (3867590)
2025-06-12 14:25:48,846 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'Cohere', 'size': 1000000, 'dim': 768, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'QdrantLocal'}, result=Metric(max_load_count=0, load_duration=0.0, qps=90.8589, serial_latency_p99=np.float64(0.0123), recall=np.float64(0.9117), ndcg=np.float64(0.9109), conc_num_list=[1], conc_qps_list=[90.8589], conc_latency_p99_list=[np.float64(0.011907943598198472)], conc_latency_avg_list=[np.float64(0.010942500705224671)]), label=ResultLabel.NORMAL[0m (interface.py:174) (3867590)
2025-06-12 14:25:48,846 | INFO |Task summary: run_id=1a378, task_label=1a37866cba9b465494bfab707b63a600 (models.py:375)
2025-06-12 14:25:48,846 | INFO |DB          | db_label case              label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-12 14:25:48,846 | INFO |----------- | -------- ----------------- -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-12 14:25:48,846 | INFO |QdrantLocal |          Performance768D1M 1a37866cba9b465494bfab707b63a600 | 0.0         90.8589    0.0123          0.9117        0              | :)    (models.py:375)
2025-06-12 14:25:48,847 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/QdrantLocal/result_20250612_1a37866cba9b465494bfab707b63a600_qdrantlocal.json[0m (models.py:243) (3867590)
2025-06-12 14:25:48,849 | [92mINFO[0m: [92mSuccess to finish task: label=1a37866cba9b465494bfab707b63a600, run_id=1a37866cba9b465494bfab707b63a600[0m (interface.py:213) (3867590)

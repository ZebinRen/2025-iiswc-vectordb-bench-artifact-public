2025-06-12 14:27:36,176 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.QdrantLocal: 'QdrantLocal'>, db_config=QdrantLocalConfig(db_label='', version='', note='', url=SecretStr('**********')), db_case_config=QdrantLocalIndexConfig(metric_type=None, m=16, ef_construct=200, hnsw_ef=27, on_disk=False), case_config=CaseConfig(case_id=<CaseType.Performance768D1M: 5>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[1], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (3871914)
2025-06-12 14:27:36,177 | [92mINFO[0m: [92mgenerated uuid for the tasks: 1d3da1e835e2401db2dce757a46152d0[0m (interface.py:72) (3871914)
2025-06-12 14:27:36,737 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-12 14:27:36,737 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-12 14:27:36,737 | INFO | QdrantLocal    | Performance  Cohere-MEDIUM-1M        None | 1d3da1e835e2401db2dce757a46152d0 (task_runner.py:340)
2025-06-12 14:27:36,737 | [92mINFO[0m: [92mtask submitted: id=1d3da1e835e2401db2dce757a46152d0, 1d3da1e835e2401db2dce757a46152d0, case number: 1[0m (interface.py:242) (3871914)
2025-06-12 14:27:37,459 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'Cohere', 'size': 1000000, 'dim': 768, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'QdrantLocal'}, drop_old=False[0m (interface.py:172) (3871980)
2025-06-12 14:27:37,460 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (3871980)
2025-06-12 14:27:38,069 | [92mINFO[0m: [92mCase config: {'distance': 'Cosine', 'm': 16, 'ef_construct': 200, 'on_disk': False}[0m (qdrant_local.py:66) (3871980)
2025-06-12 14:27:38,070 | [92mINFO[0m: [92mSearch parameter: {'exact': False, 'hnsw_ef': 27}[0m (qdrant_local.py:67) (3871980)
2025-06-12 14:27:39,492 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (3871980)
2025-06-12 14:27:39,607 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (3871980)
2025-06-12 14:27:39,695 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (3871980)
2025-06-12 14:27:40,490 | [92mINFO[0m: [92mStart search 30s in concurrency 1, filters: None[0m (mp_runner.py:118) (3871980)
2025-06-12 14:27:42,532 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=1[0m (mp_runner.py:125) (3871980)
2025-06-12 14:28:12,680 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.0151s, count=2768, qps in this process: 92.2202[0m (mp_runner.py:91) (3872193)
2025-06-12 14:28:12,689 | [92mINFO[0m: [92mEnd search in concurrency 1: dur=30.15530336998927s, total_count=2768, qps=91.7915[0m (mp_runner.py:139) (3871980)
2025-06-12 14:28:13,158 | [92mINFO[0m: [92mUpdate largest qps with concurrency 1: current max_qps=91.7915[0m (mp_runner.py:143) (3871980)
2025-06-12 14:28:14,386 | [92mINFO[0m: [92mSpawnProcess-1:3 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (3872934)
2025-06-12 14:28:28,695 | [92mINFO[0m: [92mSpawnProcess-1:3 search entire test_data: cost=9.6882s, queries=1000, avg_recall=0.9117, avg_ndcg=0.9109,avg_latency=0.0097, p99=0.0125[0m (serial_runner.py:251) (3872934)
2025-06-12 14:28:28,959 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=91.7915, serial_latency_p99=np.float64(0.0125), recall=np.float64(0.9117), ndcg=np.float64(0.9109), conc_num_list=[1], conc_qps_list=[91.7915], conc_latency_p99_list=[np.float64(0.012110313650628085)], conc_latency_avg_list=[np.float64(0.010833548769874062)])[0m (task_runner.py:186) (3871980)
2025-06-12 14:28:28,960 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'Cohere', 'size': 1000000, 'dim': 768, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'QdrantLocal'}, result=Metric(max_load_count=0, load_duration=0.0, qps=91.7915, serial_latency_p99=np.float64(0.0125), recall=np.float64(0.9117), ndcg=np.float64(0.9109), conc_num_list=[1], conc_qps_list=[91.7915], conc_latency_p99_list=[np.float64(0.012110313650628085)], conc_latency_avg_list=[np.float64(0.010833548769874062)]), label=ResultLabel.NORMAL[0m (interface.py:174) (3871980)
2025-06-12 14:28:28,961 | INFO |Task summary: run_id=1d3da, task_label=1d3da1e835e2401db2dce757a46152d0 (models.py:375)
2025-06-12 14:28:28,961 | INFO |DB          | db_label case              label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-12 14:28:28,961 | INFO |----------- | -------- ----------------- -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-12 14:28:28,961 | INFO |QdrantLocal |          Performance768D1M 1d3da1e835e2401db2dce757a46152d0 | 0.0         91.7915    0.0125          0.9117        0              | :)    (models.py:375)
2025-06-12 14:28:28,962 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/QdrantLocal/result_20250612_1d3da1e835e2401db2dce757a46152d0_qdrantlocal.json[0m (models.py:243) (3871980)
2025-06-12 14:28:28,963 | [92mINFO[0m: [92mSuccess to finish task: label=1d3da1e835e2401db2dce757a46152d0, run_id=1d3da1e835e2401db2dce757a46152d0[0m (interface.py:213) (3871980)

2025-06-12 17:44:26,476 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.QdrantLocal: 'QdrantLocal'>, db_config=QdrantLocalConfig(db_label='', version='', note='', url=SecretStr('**********'), grpc_port=6340), db_case_config=QdrantLocalIndexConfig(metric_type=None, m=16, ef_construct=200, hnsw_ef=10, on_disk=False), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[1], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (371324)
2025-06-12 17:44:26,476 | [92mINFO[0m: [92mgenerated uuid for the tasks: d9da2aaa968a40ab9b0efd9a5552db00[0m (interface.py:72) (371324)
2025-06-12 17:44:27,024 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-12 17:44:27,024 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-12 17:44:27,024 | INFO | QdrantLocal    | Performance  OpenAI-LARGE-5M         None | d9da2aaa968a40ab9b0efd9a5552db00 (task_runner.py:340)
2025-06-12 17:44:27,024 | [92mINFO[0m: [92mtask submitted: id=d9da2aaa968a40ab9b0efd9a5552db00, d9da2aaa968a40ab9b0efd9a5552db00, case number: 1[0m (interface.py:242) (371324)
2025-06-12 17:44:27,752 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'QdrantLocal'}, drop_old=False[0m (interface.py:172) (371383)
2025-06-12 17:44:27,753 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (371383)
2025-06-12 17:44:28,221 | [92mINFO[0m: [92mDB config: {'url': 'http://localhost:6339', 'grpc_port': 6340}[0m (qdrant_local.py:63) (371383)
2025-06-12 17:44:28,371 | [92mINFO[0m: [92mCase config: {'distance': 'Cosine', 'm': 16, 'ef_construct': 200, 'on_disk': False}[0m (qdrant_local.py:67) (371383)
2025-06-12 17:44:28,371 | [92mINFO[0m: [92mSearch parameter: {'exact': False, 'hnsw_ef': 10}[0m (qdrant_local.py:68) (371383)
2025-06-12 17:44:31,264 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (371383)
2025-06-12 17:44:31,425 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (371383)
2025-06-12 17:44:31,504 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (371383)
2025-06-12 17:44:32,317 | [92mINFO[0m: [92mStart search 30s in concurrency 1, filters: None[0m (mp_runner.py:118) (371383)
2025-06-12 17:44:34,384 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=1[0m (mp_runner.py:125) (371383)
2025-06-12 17:45:04,534 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.0088s, count=2261, qps in this process: 75.3446[0m (mp_runner.py:91) (371615)
2025-06-12 17:45:04,540 | [92mINFO[0m: [92mEnd search in concurrency 1: dur=30.154925048991572s, total_count=2261, qps=74.9795[0m (mp_runner.py:139) (371383)
2025-06-12 17:45:05,015 | [92mINFO[0m: [92mUpdate largest qps with concurrency 1: current max_qps=74.9795[0m (mp_runner.py:143) (371383)
2025-06-12 17:45:06,322 | [92mINFO[0m: [92mSpawnProcess-1:3 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (372387)
2025-06-12 17:45:24,413 | [92mINFO[0m: [92mSpawnProcess-1:3 search entire test_data: cost=13.6231s, queries=1000, avg_recall=0.9044, avg_ndcg=0.9091,avg_latency=0.0136, p99=0.0158[0m (serial_runner.py:251) (372387)
2025-06-12 17:45:24,715 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=74.9795, serial_latency_p99=np.float64(0.0158), recall=np.float64(0.9044), ndcg=np.float64(0.9091), conc_num_list=[1], conc_qps_list=[74.9795], conc_latency_p99_list=[np.float64(0.014841423003235831)], conc_latency_avg_list=[np.float64(0.013262888895348641)])[0m (task_runner.py:186) (371383)
2025-06-12 17:45:24,716 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'QdrantLocal'}, result=Metric(max_load_count=0, load_duration=0.0, qps=74.9795, serial_latency_p99=np.float64(0.0158), recall=np.float64(0.9044), ndcg=np.float64(0.9091), conc_num_list=[1], conc_qps_list=[74.9795], conc_latency_p99_list=[np.float64(0.014841423003235831)], conc_latency_avg_list=[np.float64(0.013262888895348641)]), label=ResultLabel.NORMAL[0m (interface.py:174) (371383)
2025-06-12 17:45:24,717 | INFO |Task summary: run_id=d9da2, task_label=d9da2aaa968a40ab9b0efd9a5552db00 (models.py:375)
2025-06-12 17:45:24,717 | INFO |DB          | db_label case               label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-12 17:45:24,717 | INFO |----------- | -------- ------------------ -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-12 17:45:24,717 | INFO |QdrantLocal |          Performance1536D5M d9da2aaa968a40ab9b0efd9a5552db00 | 0.0         74.9795    0.0158          0.9044        0              | :)    (models.py:375)
2025-06-12 17:45:24,718 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/QdrantLocal/result_20250612_d9da2aaa968a40ab9b0efd9a5552db00_qdrantlocal.json[0m (models.py:243) (371383)
2025-06-12 17:45:24,720 | [92mINFO[0m: [92mSuccess to finish task: label=d9da2aaa968a40ab9b0efd9a5552db00, run_id=d9da2aaa968a40ab9b0efd9a5552db00[0m (interface.py:213) (371383)

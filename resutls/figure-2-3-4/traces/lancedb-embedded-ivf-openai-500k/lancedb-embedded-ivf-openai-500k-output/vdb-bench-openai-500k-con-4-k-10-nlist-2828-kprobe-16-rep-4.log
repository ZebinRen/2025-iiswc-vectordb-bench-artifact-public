2025-06-14 15:15:15,565 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T15:15:15.520110', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-ivfpq-openai-500k', token=None), db_case_config=LanceDBIndexConfig(index=<IndexType.IVFPQ: 'IVF_PQ'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=2828, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=16), case_config=CaseConfig(case_id=<CaseType.Performance1536D500K: 10>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_concurrent'])
[0m (cli.py:516) (1121147)
2025-06-14 15:15:15,566 | [92mINFO[0m: [92mgenerated uuid for the tasks: 87845da260764a9ea2a086340ac911b9[0m (interface.py:72) (1121147)
2025-06-14 15:15:15,774 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 15:15:15,774 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 15:15:15,775 | INFO | LanceDB-2025-06-14T15:15:15.520110 | Performance  OpenAI-MEDIUM-500K      None | 87845da260764a9ea2a086340ac911b9 (task_runner.py:340)
2025-06-14 15:15:15,775 | [92mINFO[0m: [92mtask submitted: id=87845da260764a9ea2a086340ac911b9, 87845da260764a9ea2a086340ac911b9, case number: 1[0m (interface.py:242) (1121147)
2025-06-14 15:15:16,490 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T15:15:15.520110'}, drop_old=False[0m (interface.py:172) (1121184)
2025-06-14 15:15:16,490 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (1121184)
2025-06-14 15:15:16,622 | [92mINFO[0m: [92mSearch config: {'nprobes': 16}[0m (lancedb.py:38) (1121184)
2025-06-14 15:15:18,141 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (1121184)
2025-06-14 15:15:18,299 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (1121184)
2025-06-14 15:15:18,386 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (1121184)
2025-06-14 15:15:19,202 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (1121184)
2025-06-14 15:15:23,274 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (1121184)
2025-06-14 15:15:53,369 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.0833s, count=43, qps in this process: 1.4294[0m (mp_runner.py:91) (1121336)
2025-06-14 15:15:53,515 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=30.2258s, count=41, qps in this process: 1.3565[0m (mp_runner.py:91) (1121338)
2025-06-14 15:15:53,714 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=30.4268s, count=41, qps in this process: 1.3475[0m (mp_runner.py:91) (1121337)
2025-06-14 15:15:53,873 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.5875s, count=41, qps in this process: 1.3404[0m (mp_runner.py:91) (1121333)
2025-06-14 15:15:53,880 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=30.605343333008932s, total_count=166, qps=5.4239[0m (mp_runner.py:139) (1121184)
2025-06-14 15:15:54,405 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=5.4239[0m (mp_runner.py:143) (1121184)
2025-06-14 15:15:54,406 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=5.4239, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[5.4239], conc_latency_p99_list=[np.float64(1.0862956114062399)], conc_latency_avg_list=[np.float64(0.7293741239574233)])[0m (task_runner.py:186) (1121184)
2025-06-14 15:15:54,406 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T15:15:15.520110'}, result=Metric(max_load_count=0, load_duration=0.0, qps=5.4239, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[5.4239], conc_latency_p99_list=[np.float64(1.0862956114062399)], conc_latency_avg_list=[np.float64(0.7293741239574233)]), label=ResultLabel.NORMAL[0m (interface.py:174) (1121184)
2025-06-14 15:15:54,406 | INFO |Task summary: run_id=87845, task_label=87845da260764a9ea2a086340ac911b9 (models.py:375)
2025-06-14 15:15:54,406 | INFO |DB      | db_label                      case                 label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 15:15:54,406 | INFO |------- | ----------------------------- -------------------- -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 15:15:54,406 | INFO |LanceDB | 2025-06-14T15:15:15.520110    Performance1536D500K 87845da260764a9ea2a086340ac911b9 | 0.0         5.4239     0.0             0.0           0              | :)    (models.py:375)
2025-06-14 15:15:54,407 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_87845da260764a9ea2a086340ac911b9_lancedb.json[0m (models.py:243) (1121184)
2025-06-14 15:15:54,408 | [92mINFO[0m: [92mSuccess to finish task: label=87845da260764a9ea2a086340ac911b9, run_id=87845da260764a9ea2a086340ac911b9[0m (interface.py:213) (1121184)

2025-06-14 15:13:54,252 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.LanceDB: 'LanceDB'>, db_config=LanceDBConfig(db_label='2025-06-14T15:13:54.206184', version='', note='', uri='/mnt/vectordb/nvme0n1/lancedb/lancedb-ivfpq-openai-500k', token=None), db_case_config=LanceDBIndexConfig(index=<IndexType.IVFPQ: 'IVF_PQ'>, metric_type=<MetricType.L2: 'L2'>, num_partitions=2828, num_sub_vectors=0, nbits=8, sample_rate=256, max_iterations=50, nprobes=16), case_config=CaseConfig(case_id=<CaseType.Performance1536D500K: 10>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_concurrent'])
[0m (cli.py:516) (1119756)
2025-06-14 15:13:54,253 | [92mINFO[0m: [92mgenerated uuid for the tasks: 9d1639f07c8742bc84e261cc0b2f9aa9[0m (interface.py:72) (1119756)
2025-06-14 15:13:54,452 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-14 15:13:54,452 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-14 15:13:54,452 | INFO | LanceDB-2025-06-14T15:13:54.206184 | Performance  OpenAI-MEDIUM-500K      None | 9d1639f07c8742bc84e261cc0b2f9aa9 (task_runner.py:340)
2025-06-14 15:13:54,452 | [92mINFO[0m: [92mtask submitted: id=9d1639f07c8742bc84e261cc0b2f9aa9, 9d1639f07c8742bc84e261cc0b2f9aa9, case number: 1[0m (interface.py:242) (1119756)
2025-06-14 15:13:55,164 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T15:13:54.206184'}, drop_old=False[0m (interface.py:172) (1119793)
2025-06-14 15:13:55,164 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (1119793)
2025-06-14 15:13:55,296 | [92mINFO[0m: [92mSearch config: {'nprobes': 16}[0m (lancedb.py:38) (1119793)
2025-06-14 15:13:56,814 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (1119793)
2025-06-14 15:13:56,986 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (1119793)
2025-06-14 15:13:57,075 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (1119793)
2025-06-14 15:13:57,864 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (1119793)
2025-06-14 15:14:01,938 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (1119793)
2025-06-14 15:14:32,164 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=30.213s, count=41, qps in this process: 1.357[0m (mp_runner.py:91) (1119946)
2025-06-14 15:14:32,229 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.2777s, count=41, qps in this process: 1.3541[0m (mp_runner.py:91) (1119942)
2025-06-14 15:14:32,343 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.3909s, count=41, qps in this process: 1.3491[0m (mp_runner.py:91) (1119945)
2025-06-14 15:14:32,344 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=30.3931s, count=40, qps in this process: 1.3161[0m (mp_runner.py:91) (1119947)
2025-06-14 15:14:32,350 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=30.41098977198999s, total_count=163, qps=5.3599[0m (mp_runner.py:139) (1119793)
2025-06-14 15:14:32,892 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=5.3599[0m (mp_runner.py:143) (1119793)
2025-06-14 15:14:32,893 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=5.3599, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[5.3599], conc_latency_p99_list=[np.float64(1.0227144594796116)], conc_latency_avg_list=[np.float64(0.7421128697294465)])[0m (task_runner.py:186) (1119793)
2025-06-14 15:14:32,893 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'LanceDB-2025-06-14T15:13:54.206184'}, result=Metric(max_load_count=0, load_duration=0.0, qps=5.3599, serial_latency_p99=0.0, recall=0.0, ndcg=0.0, conc_num_list=[4], conc_qps_list=[5.3599], conc_latency_p99_list=[np.float64(1.0227144594796116)], conc_latency_avg_list=[np.float64(0.7421128697294465)]), label=ResultLabel.NORMAL[0m (interface.py:174) (1119793)
2025-06-14 15:14:32,894 | INFO |Task summary: run_id=9d163, task_label=9d1639f07c8742bc84e261cc0b2f9aa9 (models.py:375)
2025-06-14 15:14:32,894 | INFO |DB      | db_label                      case                 label                            | load_dur    qps        latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-14 15:14:32,894 | INFO |------- | ----------------------------- -------------------- -------------------------------- | ----------- ---------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-14 15:14:32,894 | INFO |LanceDB | 2025-06-14T15:13:54.206184    Performance1536D500K 9d1639f07c8742bc84e261cc0b2f9aa9 | 0.0         5.3599     0.0             0.0           0              | :)    (models.py:375)
2025-06-14 15:14:32,895 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/LanceDB/result_20250614_9d1639f07c8742bc84e261cc0b2f9aa9_lancedb.json[0m (models.py:243) (1119793)
2025-06-14 15:14:32,896 | [92mINFO[0m: [92mSuccess to finish task: label=9d1639f07c8742bc84e261cc0b2f9aa9, run_id=9d1639f07c8742bc84e261cc0b2f9aa9[0m (interface.py:213) (1119793)

2025-06-08 15:54:01,851 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.Milvus: 'Milvus'>, db_config=MilvusConfig(db_label='milvus_ivf_openai_500k', version='', note='', uri=SecretStr('**********'), user=None, password=SecretStr(''), num_shards=1), db_case_config=IVFFlatConfig(index=<IndexType.IVFFlat: 'IVF_FLAT'>, metric_type=None, nlist=2828, nprobe=16), case_config=CaseConfig(case_id=<CaseType.Performance1536D500K: 10>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (468149)
2025-06-08 15:54:01,852 | [92mINFO[0m: [92mgenerated uuid for the tasks: 8e0faff5a55a451392aa95ff280fa2f6[0m (interface.py:72) (468149)
2025-06-08 15:54:02,008 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-08 15:54:02,008 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-08 15:54:02,008 | INFO | Milvus-milvus_ivf_openai_500k | Performance  OpenAI-MEDIUM-500K      None | 8e0faff5a55a451392aa95ff280fa2f6 (task_runner.py:340)
2025-06-08 15:54:02,008 | [92mINFO[0m: [92mtask submitted: id=8e0faff5a55a451392aa95ff280fa2f6, 8e0faff5a55a451392aa95ff280fa2f6, case number: 1[0m (interface.py:242) (468149)
2025-06-08 15:54:02,744 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'Milvus-milvus_ivf_openai_500k'}, drop_old=False[0m (interface.py:172) (468185)
2025-06-08 15:54:02,745 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (468185)
2025-06-08 15:54:04,481 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (468185)
2025-06-08 15:54:04,662 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (468185)
2025-06-08 15:54:04,734 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (468185)
2025-06-08 15:54:05,579 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (468185)
2025-06-08 15:54:09,653 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (468185)
2025-06-08 15:54:39,679 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=30.0021s, count=5969, qps in this process: 198.9527[0m (mp_runner.py:91) (468347)
2025-06-08 15:54:39,679 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.0032s, count=5974, qps in this process: 199.1121[0m (mp_runner.py:91) (468338)
2025-06-08 15:54:39,680 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.0041s, count=5974, qps in this process: 199.1061[0m (mp_runner.py:91) (468335)
2025-06-08 15:54:39,686 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=30.0048s, count=5973, qps in this process: 199.0681[0m (mp_runner.py:91) (468346)
2025-06-08 15:54:39,693 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=30.038317005000863s, total_count=23890, qps=795.3175[0m (mp_runner.py:139) (468185)
2025-06-08 15:54:40,041 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=795.3175[0m (mp_runner.py:143) (468185)
2025-06-08 15:54:40,913 | [92mINFO[0m: [92mSpawnProcess-1:6 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (468892)
2025-06-08 15:54:52,794 | [92mINFO[0m: [92mSpawnProcess-1:6 search entire test_data: cost=7.4382s, queries=1000, avg_recall=0.9011, avg_ndcg=0.9065,avg_latency=0.0074, p99=0.009[0m (serial_runner.py:251) (468892)
2025-06-08 15:54:53,033 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=795.3175, serial_latency_p99=np.float64(0.009), recall=np.float64(0.9011), ndcg=np.float64(0.9065), conc_num_list=[4], conc_qps_list=[795.3175], conc_latency_p99_list=[np.float64(0.006313737940836294)], conc_latency_avg_list=[np.float64(0.005018610208914784)])[0m (task_runner.py:186) (468185)
2025-06-08 15:54:53,033 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 500000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'Milvus-milvus_ivf_openai_500k'}, result=Metric(max_load_count=0, load_duration=0.0, qps=795.3175, serial_latency_p99=np.float64(0.009), recall=np.float64(0.9011), ndcg=np.float64(0.9065), conc_num_list=[4], conc_qps_list=[795.3175], conc_latency_p99_list=[np.float64(0.006313737940836294)], conc_latency_avg_list=[np.float64(0.005018610208914784)]), label=ResultLabel.NORMAL[0m (interface.py:174) (468185)
2025-06-08 15:54:53,034 | INFO |Task summary: run_id=8e0fa, task_label=8e0faff5a55a451392aa95ff280fa2f6 (models.py:375)
2025-06-08 15:54:53,034 | INFO |DB     | db_label                  case                 label                            | load_dur    qps         latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-08 15:54:53,034 | INFO |------ | ------------------------- -------------------- -------------------------------- | ----------- ----------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-08 15:54:53,034 | INFO |Milvus | milvus_ivf_openai_500k    Performance1536D500K 8e0faff5a55a451392aa95ff280fa2f6 | 0.0         795.3175    0.009           0.9011        0              | :)    (models.py:375)
2025-06-08 15:54:53,034 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/Milvus/result_20250608_8e0faff5a55a451392aa95ff280fa2f6_milvus.json[0m (models.py:243) (468185)
2025-06-08 15:54:53,035 | [92mINFO[0m: [92mSuccess to finish task: label=8e0faff5a55a451392aa95ff280fa2f6, run_id=8e0faff5a55a451392aa95ff280fa2f6[0m (interface.py:213) (468185)

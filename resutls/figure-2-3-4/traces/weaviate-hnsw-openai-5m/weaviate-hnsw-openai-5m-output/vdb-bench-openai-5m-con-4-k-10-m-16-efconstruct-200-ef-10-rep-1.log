2025-06-07 21:52:47,051 | [92mINFO[0m: [92mTask:
TaskConfig(db=<DB.WeaviateCloud: 'WeaviateCloud'>, db_config=WeaviateConfig(db_label='2025-06-07T21:52:47.008542', version='', note='', url=SecretStr('**********'), api_key=SecretStr('**********'), no_auth=True), db_case_config=WeaviateIndexConfig(metric_type=None, ef=10, efConstruction=200, maxConnections=16), case_config=CaseConfig(case_id=<CaseType.Performance1536D5M: 11>, custom_case={}, k=10, concurrency_search_config=ConcurrencySearchConfig(num_concurrency=[4], concurrency_duration=30, concurrency_timeout=3600)), stages=['search_serial', 'search_concurrent'])
[0m (cli.py:516) (970527)
2025-06-07 21:52:47,051 | [92mINFO[0m: [92mgenerated uuid for the tasks: 7c948f7c3f004491a8502ec40f578c3c[0m (interface.py:72) (970527)
2025-06-07 21:52:47,387 | INFO | DB             | CaseType     Dataset               Filter | task_label (task_runner.py:340)
2025-06-07 21:52:47,388 | INFO | -----------    | ------------ -------------------- ------- | -------    (task_runner.py:340)
2025-06-07 21:52:47,388 | INFO | WeaviateCloud-2025-06-07T21:52:47.008542 | Performance  OpenAI-LARGE-5M         None | 7c948f7c3f004491a8502ec40f578c3c (task_runner.py:340)
2025-06-07 21:52:47,388 | [92mINFO[0m: [92mtask submitted: id=7c948f7c3f004491a8502ec40f578c3c, 7c948f7c3f004491a8502ec40f578c3c, case number: 1[0m (interface.py:242) (970527)
2025-06-07 21:52:48,101 | [92mINFO[0m: [92m[1/1] start case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'WeaviateCloud-2025-06-07T21:52:47.008542'}, drop_old=False[0m (interface.py:172) (970619)
2025-06-07 21:52:48,102 | [92mINFO[0m: [92mStarting run[0m (task_runner.py:105) (970619)
2025-06-07 21:52:51,091 | [92mINFO[0m: [92mRead the entire file into memory: test.parquet[0m (dataset.py:251) (970619)
2025-06-07 21:52:51,245 | [92mINFO[0m: [92mRead the entire file into memory: neighbors.parquet[0m (dataset.py:251) (970619)
2025-06-07 21:52:51,323 | [92mINFO[0m: [92mStart performance case[0m (task_runner.py:147) (970619)
2025-06-07 21:52:52,138 | [92mINFO[0m: [92mStart search 30s in concurrency 4, filters: None[0m (mp_runner.py:118) (970619)
2025-06-07 21:52:56,211 | [92mINFO[0m: [92mSyncing all process and start concurrency search, concurrency=4[0m (mp_runner.py:125) (970619)
2025-06-07 21:53:26,255 | [92mINFO[0m: [92mSpawnProcess-1:4 search 30s: actual_dur=30.015s, count=931, qps in this process: 31.0178[0m (mp_runner.py:91) (970888)
2025-06-07 21:53:26,259 | [92mINFO[0m: [92mSpawnProcess-1:3 search 30s: actual_dur=30.017s, count=929, qps in this process: 30.9491[0m (mp_runner.py:91) (970887)
2025-06-07 21:53:26,262 | [92mINFO[0m: [92mSpawnProcess-1:5 search 30s: actual_dur=30.021s, count=934, qps in this process: 31.1116[0m (mp_runner.py:91) (970889)
2025-06-07 21:53:26,263 | [92mINFO[0m: [92mSpawnProcess-1:2 search 30s: actual_dur=30.0229s, count=933, qps in this process: 31.0763[0m (mp_runner.py:91) (970882)
2025-06-07 21:53:26,270 | [92mINFO[0m: [92mEnd search in concurrency 4: dur=30.058096973982174s, total_count=3727, qps=123.9932[0m (mp_runner.py:139) (970619)
2025-06-07 21:53:26,706 | [92mINFO[0m: [92mUpdate largest qps with concurrency 4: current max_qps=123.9932[0m (mp_runner.py:143) (970619)
2025-06-07 21:53:27,776 | [92mINFO[0m: [92mSpawnProcess-1:6 start search the entire test_data to get recall and latency[0m (serial_runner.py:206) (972204)
2025-06-07 21:54:07,140 | [92mINFO[0m: [92mSpawnProcess-1:6 search entire test_data: cost=32.3992s, queries=1000, avg_recall=0.7229, avg_ndcg=0.7368,avg_latency=0.0324, p99=0.0341[0m (serial_runner.py:251) (972204)
2025-06-07 21:54:07,363 | [92mINFO[0m: [92mPerformance case got result: Metric(max_load_count=0, load_duration=0.0, qps=123.9932, serial_latency_p99=np.float64(0.0341), recall=np.float64(0.7229), ndcg=np.float64(0.7368), conc_num_list=[4], conc_qps_list=[123.9932], conc_latency_p99_list=[np.float64(0.034325494854710994)], conc_latency_avg_list=[np.float64(0.03220994576661172)])[0m (task_runner.py:186) (970619)
2025-06-07 21:54:07,364 | [92mINFO[0m: [92m[1/1] finish case: {'label': <CaseLabel.Performance: 2>, 'dataset': {'data': {'name': 'OpenAI', 'size': 5000000, 'dim': 1536, 'metric_type': <MetricType.COSINE: 'COSINE'>}}, 'db': 'WeaviateCloud-2025-06-07T21:52:47.008542'}, result=Metric(max_load_count=0, load_duration=0.0, qps=123.9932, serial_latency_p99=np.float64(0.0341), recall=np.float64(0.7229), ndcg=np.float64(0.7368), conc_num_list=[4], conc_qps_list=[123.9932], conc_latency_p99_list=[np.float64(0.034325494854710994)], conc_latency_avg_list=[np.float64(0.03220994576661172)]), label=ResultLabel.NORMAL[0m (interface.py:174) (970619)
2025-06-07 21:54:07,364 | INFO |Task summary: run_id=7c948, task_label=7c948f7c3f004491a8502ec40f578c3c (models.py:375)
2025-06-07 21:54:07,364 | INFO |DB            | db_label                      case               label                            | load_dur    qps         latency(p99)    recall        max_load_count | label (models.py:375)
2025-06-07 21:54:07,364 | INFO |------------- | ----------------------------- ------------------ -------------------------------- | ----------- ----------- --------------- ------------- -------------- | ----- (models.py:375)
2025-06-07 21:54:07,365 | INFO |WeaviateCloud | 2025-06-07T21:52:47.008542    Performance1536D5M 7c948f7c3f004491a8502ec40f578c3c | 0.0         123.9932    0.0341          0.7229        0              | :)    (models.py:375)
2025-06-07 21:54:07,365 | [92mINFO[0m: [92mwrite results to disk /home/zebin/2025-vectordb-bench-new/VectorDBBench-dev/vectordb_bench/results/WeaviateCloud/result_20250607_7c948f7c3f004491a8502ec40f578c3c_weaviatecloud.json[0m (models.py:243) (970619)
2025-06-07 21:54:07,366 | [92mINFO[0m: [92mSuccess to finish task: label=7c948f7c3f004491a8502ec40f578c3c, run_id=7c948f7c3f004491a8502ec40f578c3c[0m (interface.py:213) (970619)
